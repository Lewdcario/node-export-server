import"colors";import e,{existsSync as t,mkdirSync as r,appendFile as i,readFileSync as o,writeFileSync as n,promises as s}from"fs";import a,{join as l,posix as c}from"path";import p from"dotenv";import{HttpsProxyAgent as h}from"https-proxy-agent";import u from"http";import d from"https";import*as g from"url";import{fileURLToPath as m}from"url";import f from"prompts";import{Pool as v}from"tarn";import{v4 as y}from"uuid";import w from"node:path";import b from"puppeteer";import{randomBytes as T}from"node:crypto";import k from"cors";import x from"express";import E from"multer";import L from"express-rate-limit";async function S(e,t={}){return new Promise(((r,i)=>{const o=(e=>e.startsWith("https")?d:u)(e);o.get(e,t,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{t||i("Nothing was fetched from the URL."),e.text=t,r(e)}))})).on("error",(e=>{i(e)}))}))}p.config();const O={puppeteer:{args:{value:[],type:"string[]",description:"Arguments array to send to Puppeteer."}},highcharts:{version:{value:"latest",envLink:"HIGHCHARTS_VERSION",type:"string",description:"The Highcharts version to be used."},cdnURL:{value:"https://code.highcharts.com/",envLink:"HIGHCHARTS_CDN_URL",type:"string",description:"The CDN URL for Highcharts scripts to be used."},coreScripts:{envLink:"HIGHCHARTS_CORE_SCRIPTS",value:["highcharts","highcharts-more","highcharts-3d"],type:"string[]",description:"The core Highcharts scripts to fetch."},modules:{envLink:"HIGHCHARTS_MODULES",value:["stock","map","gantt","exporting","export-data","parallel-coordinates","accessibility","annotations-advanced","boost-canvas","boost","data","data-tools","draggable-points","static-scale","broken-axis","heatmap","tilemap","tiledwebmap","timeline","treemap","treegraph","item-series","drilldown","histogram-bellcurve","bullet","funnel","funnel3d","geoheatmap","pyramid3d","networkgraph","overlapping-datalabels","pareto","pattern-fill","pictorial","price-indicator","sankey","arc-diagram","dependency-wheel","series-label","solid-gauge","sonification","stock-tools","streamgraph","sunburst","variable-pie","variwide","vector","venn","windbarb","wordcloud","xrange","no-data-to-display","drag-panes","debugger","dumbbell","lollipop","cylinder","organization","dotplot","marker-clusters","hollowcandlestick","heikinashi","flowmap"],type:"string[]",description:"The modules of Highcharts to fetch."},indicators:{envLink:"HIGHCHARTS_INDICATORS",value:["indicators-all"],type:"string[]",description:"The indicators of Highcharts to fetch."},scripts:{value:["https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js","https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"],type:"string[]",description:"Additional optional scripts or dependencies to fetch."},forceFetch:{envLink:"HIGHCHARTS_FORCE_FETCH",value:!1,type:"boolean",description:"The flag to determine whether to refetch all scripts after each server rerun."},cachePath:{envLink:"HIGHCHARTS_CACHE_PATH",value:".cache",type:"string",description:"The path to the cache directory. It is used to store the Highcharts scripts and custom scripts."}},export:{infile:{value:!1,type:"string",description:"The input file should include a name and a type (json or svg). It must be correctly formatted as a JSON or SVG file."},instr:{value:!1,type:"string",description:"Input, provided in the form of a stringified JSON or SVG file, will override the --infile option."},options:{value:!1,type:"string",description:"An alias for the --instr option."},outfile:{value:!1,type:"string",description:"The output filename along with a type (jpeg, png, pdf, or svg). This will ignore the --type flag."},type:{envLink:"EXPORT_TYPE",value:"png",type:"string",description:"The file export format. It can be jpeg, png, pdf, or svg."},constr:{envLink:"EXPORT_CONSTR",value:"chart",type:"string",description:"The constructor to use. Can be chart, stockChart, mapChart, or ganttChart."},defaultHeight:{envLink:"EXPORT_DEFAULT_HEIGHT",value:400,type:"number",description:"the default height of the exported chart. Used when no value is set."},defaultWidth:{envLink:"EXPORT_DEFAULT_WIDTH",value:600,type:"number",description:"The default width of the exported chart. Used when no value is set."},defaultScale:{envLink:"EXPORT_DEFAULT_SCALE",value:1,type:"number",description:"The default scale of the exported chart. Used when no value is set."},height:{type:"number",value:!1,description:"The height of the exported chart, overriding the option in the chart settings."},width:{type:"number",value:!1,description:"The width of the exported chart, overriding the option in the chart settings."},scale:{value:!1,type:"number",description:"The scale of the exported chart, overriding the option in the chart settings. Ranges between 0.1 and 5.0."},globalOptions:{value:!1,type:"string",description:"Either a stringified JSON or a filename containing options to be passed into the Highcharts.setOptions."},themeOptions:{value:!1,type:"string",description:"Either a stringified JSON or a filename containing theme options to be passed into the Highcharts.setOptions."},batch:{value:!1,type:"string",description:'Initiates a batch job with a string containing input/output pairs: "in=out;in=out;...".'},rasterizationTimeout:{envLink:"EXPORT_RASTERIZATION_TIMEOUT",value:1500,type:"number",description:"The duration in milliseconds to wait for rendering a webpage."}},customLogic:{allowCodeExecution:{envLink:"CUSTOM_LOGIC_ALLOW_CODE_EXECUTION",value:!1,type:"boolean",description:"Controls whether the execution of arbitrary code is allowed during the exporting process."},allowFileResources:{envLink:"CUSTOM_LOGIC_ALLOW_FILE_RESOURCES",value:!1,type:"boolean",description:"Controls the ability to inject resources from the filesystem. This setting has no effect when running as a server."},customCode:{value:!1,type:"string",description:"Custom code to execute before chart initialization. It can be a function, code wrapped within a function, or a filename with the .js extension."},callback:{value:!1,type:"string",description:"JavaScript code to run during construction. It can be a function or a filename with the .js extension."},resources:{value:!1,type:"string",description:"Additional resource in the form of a stringified JSON, which may contain files, js, and css sections."},loadConfig:{value:!1,type:"string",legacyName:"fromFile",description:"A file containing a pre-defined configuration to use."},createConfig:{value:!1,type:"string",description:"Enables setting options through a prompt and saving them in a provided config file."}},server:{enable:{envLink:"SERVER_ENABLE",value:!1,type:"boolean",cliName:"enableServer",description:"When set to true, the server starts on the local IP address 0.0.0.0."},host:{envLink:"SERVER_HOST",value:"0.0.0.0",type:"string",description:"The hostname of the server. Additionally, it starts a server on the provided hostname."},port:{envLink:"SERVER_PORT",value:7801,type:"number",description:"The server port when enabled."},benchmarking:{envLink:"SERVER_BENCHMARKING",value:!1,type:"boolean",cliName:"serverBenchmarking",description:"Indicates whether to display the duration, in milliseconds, of specific actions that occur on the server while serving a request."},ssl:{enable:{envLink:"SERVER_SSL_ENABLE",value:!1,type:"boolean",cliName:"enableSsl",description:"Enables or disables the SSL protocol."},force:{envLink:"SERVER_SSL_FORCE",value:!1,type:"boolean",cliName:"sslForced",legacyName:"sslOnly",description:"When set to true, the server is forced to serve only over HTTPS."},port:{envLink:"SERVER_SSL_PORT",value:443,type:"number",cliName:"sslPort",description:"The port on which to run the SSL server."},certPath:{envLink:"SERVER_SSL_CERT_PATH",value:"",type:"string",legacyName:"sslPath",description:"The path to the SSL certificate/key file."}},rateLimiting:{enable:{envLink:"SERVER_RATE_LIMITING_ENABLE",value:!1,type:"boolean",cliName:"enableRateLimiting",description:"Enables rate limiting for the server."},maxRequests:{envLink:"SERVER_RATE_LIMITING_MAX_REQUESTS",value:10,type:"number",legacyName:"rateLimit",description:"The maximum number of requests allowed in one minute."},window:{envLink:"SERVER_RATE_LIMITING_WINDOW",value:1,type:"number",description:"The time window, in minutes, for the rate limiting."},delay:{envLink:"SERVER_RATE_LIMITING_DELAY",value:0,type:"number",description:"The delay duration for each successive request before reaching the maximum limit."},trustProxy:{envLink:"SERVER_RATE_LIMITING_TRUST_PROXY",value:!1,type:"boolean",description:"Set this to true if the server is behind a load balancer."},skipKey:{envLink:"SERVER_RATE_LIMITING_SKIP_KEY",value:"",type:"string",description:"Allows bypassing the rate limiter and should be provided with the skipToken argument."},skipToken:{envLink:"SERVER_RATE_LIMITING_SKIP_TOKEN",value:"",type:"string",description:"Allows bypassing the rate limiter and should be provided with the skipKey argument."}}},pool:{minWorkers:{envLink:"POOL_MIN_WORKERS",value:4,type:"number",description:"The number of minimum and initial pool workers to spawn."},maxWorkers:{envLink:"POOL_MAX_WORKERS",value:8,type:"number",legacyName:"workers",description:"The number of maximum pool workers to spawn."},workLimit:{envLink:"POOL_WORK_LIMIT",value:40,type:"number",description:"The number of work pieces that can be performed before restarting the worker process."},acquireTimeout:{envLink:"POOL_ACQUIRE_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for acquiring a resource."},createTimeout:{envLink:"POOL_CREATE_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for creating a resource."},destroyTimeout:{envLink:"POOL_DESTROY_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for destroying a resource."},idleTimeout:{envLink:"POOL_IDLE_TIMEOUT",value:3e4,type:"number",description:"The duration, in milliseconds, after which an idle resource is destroyed."},createRetryInterval:{envLink:"POOL_CREATE_RETRY_INTERVAL",value:200,type:"number",description:"The duration, in milliseconds, to wait before retrying the create process in case of a failure."},reaperInterval:{envLink:"POOL_REAPER_INTERVAL",value:1e3,type:"number",description:"The duration, in milliseconds, after which the check for idle resources to destroy is triggered."},benchmarking:{envLink:"POOL_BENCHMARKING",value:!1,type:"boolean",cliName:"poolBenchmarking",description:"Indicate whether to show statistics for the pool of resources or not."},listenToProcessExits:{envLink:"POOL_LISTEN_TO_PROCESS_EXITS",value:!0,type:"boolean",description:"Decides whether or not to attach process.exit handlers."}},logging:{level:{envLink:"LOGGING_LEVEL",value:4,type:"number",cliName:"logLevel",description:"The logging level to be used."},file:{envLink:"LOGGING_FILE",value:"highcharts-export-server.log",type:"string",cliName:"logFile",description:"The name of a log file. The logDest option also needs to be set to enable file logging."},dest:{envLink:"LOGGING_DEST",value:"log/",type:"string",cliName:"logDest",description:"The path to store log files. This also enables file logging."}},ui:{enable:{envLink:"UI_ENABLE",value:!1,type:"boolean",cliName:"enableUi",description:"Enables or disables the user interface (UI) for the export server."},route:{envLink:"UI_ROUTE",value:"/",type:"string",cliName:"uiRoute",description:"The endpoint route to which the user interface (UI) should be attached."}},other:{noLogo:{envLink:"OTHER_NO_LOGO",value:!1,type:"boolean",description:"Skip printing the logo on a startup. Will be replaced by a simple text."}}},R={puppeteer:[{type:"list",name:"args",message:"Puppeteer arguments",initial:O.puppeteer.args.value.join(","),separator:","}],highcharts:[{type:"text",name:"version",message:"Highcharts version",initial:O.highcharts.version.value},{type:"text",name:"cdnURL",message:"The URL of CDN",initial:O.highcharts.cdnURL.value},{type:"multiselect",name:"modules",message:"Available modules",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:O.highcharts.modules.value},{type:"list",name:"scripts",message:"Custom scripts",initial:O.highcharts.scripts.value.join(","),separator:","},{type:"toggle",name:"forceFetch",message:"Force re-fetch the scripts",initial:O.highcharts.forceFetch.value},{type:"text",name:"cachePath",message:"The path to the cache directory",initial:O.highcharts.cachePath.value}],export:[{type:"select",name:"type",message:"The default export file type",hint:`Default: ${O.export.type.value}`,initial:0,choices:["png","jpeg","pdf","svg"]},{type:"select",name:"constr",message:"The default constructor for Highcharts",hint:`Default: ${O.export.constr.value}`,initial:0,choices:["chart","stockChart","mapChart","ganttChart"]},{type:"number",name:"defaultHeight",message:"The default fallback height of the exported chart",initial:O.export.defaultHeight.value},{type:"number",name:"defaultWidth",message:"The default fallback width of the exported chart",initial:O.export.defaultWidth.value},{type:"number",name:"defaultScale",message:"The default fallback scale of the exported chart",initial:O.export.defaultScale.value,min:.1,max:5},{type:"number",name:"rasterizationTimeout",message:"The rendering webpage timeout in milliseconds",initial:O.export.rasterizationTimeout.value}],customLogic:[{type:"toggle",name:"allowCodeExecution",message:"Enable execution of custom code",initial:O.customLogic.allowCodeExecution.value},{type:"toggle",name:"allowFileResources",message:"Enable file resources",initial:O.customLogic.allowFileResources.value}],server:[{type:"toggle",name:"enable",message:"Starts the server on 0.0.0.0",initial:O.server.enable.value},{type:"text",name:"host",message:"Server hostname",initial:O.server.host.value},{type:"number",name:"port",message:"Server port",initial:O.server.port.value},{type:"toggle",name:"benchmarking",message:"Enable server benchmarking",initial:O.server.benchmarking.value},{type:"toggle",name:"ssl.enable",message:"Enable SSL protocol",initial:O.server.ssl.enable.value},{type:"toggle",name:"ssl.force",message:"Force serving only over HTTPS",initial:O.server.ssl.force.value},{type:"number",name:"ssl.port",message:"SSL server port",initial:O.server.ssl.port.value},{type:"text",name:"ssl.certPath",message:"The path to find the SSL certificate/key",initial:O.server.ssl.certPath.value},{type:"toggle",name:"rateLimiting.enable",message:"Enable rate limiting",initial:O.server.rateLimiting.enable.value},{type:"number",name:"rateLimiting.maxRequests",message:"The maximum requests allowed per minute",initial:O.server.rateLimiting.maxRequests.value},{type:"number",name:"rateLimiting.window",message:"The rate-limiting time window in minutes",initial:O.server.rateLimiting.window.value},{type:"number",name:"rateLimiting.delay",message:"The delay for each successive request before reaching the maximum",initial:O.server.rateLimiting.delay.value},{type:"toggle",name:"rateLimiting.trustProxy",message:"Set to true if behind a load balancer",initial:O.server.rateLimiting.trustProxy.value},{type:"text",name:"rateLimiting.skipKey",message:"Allows bypassing the rate limiter when provided with the skipToken argument",initial:O.server.rateLimiting.skipKey.value},{type:"text",name:"rateLimiting.skipToken",message:"Allows bypassing the rate limiter when provided with the skipKey argument",initial:O.server.rateLimiting.skipToken.value}],pool:[{type:"number",name:"minWorkers",message:"The initial number of workers to spawn",initial:O.pool.minWorkers.value},{type:"number",name:"maxWorkers",message:"The maximum number of workers to spawn",initial:O.pool.maxWorkers.value},{type:"number",name:"workLimit",message:"The pieces of work that can be performed before restarting a Puppeteer process",initial:O.pool.workLimit.value},{type:"number",name:"acquireTimeout",message:"The number of milliseconds to wait for acquiring a resource",initial:O.pool.acquireTimeout.value},{type:"number",name:"createTimeout",message:"The number of milliseconds to wait for creating a resource",initial:O.pool.createTimeout.value},{type:"number",name:"destroyTimeout",message:"The number of milliseconds to wait for destroying a resource",initial:O.pool.destroyTimeout.value},{type:"number",name:"idleTimeout",message:"The number of milliseconds after an idle resource is destroyed",initial:O.pool.idleTimeout.value},{type:"number",name:"createRetryInterval",message:"The retry interval in milliseconds after a create process fails",initial:O.pool.createRetryInterval.value},{type:"number",name:"reaperInterval",message:"The reaper interval in milliseconds after triggering the check for idle resources to destroy",initial:O.pool.reaperInterval.value},{type:"toggle",name:"benchmarking",message:"Enable benchmarking for a resource pool",initial:O.pool.benchmarking.value},{type:"toggle",name:"listenToProcessExits",message:"Set to false to skip attaching process.exit handlers",initial:O.pool.listenToProcessExits.value}],logging:[{type:"number",name:"level",message:"The log level (0: silent, 1: error, 2: warning, 3: notice, 4: verbose, 5: benchmark)",initial:O.logging.level.value,round:0,min:0,max:5},{type:"text",name:"file",message:"A log file name. Set with the --logDest to enable file logging",initial:O.logging.file.value},{type:"text",name:"dest",message:"The path to log files. Enables file logging",initial:O.logging.dest.value}],ui:[{type:"toggle",name:"enable",message:"Enable UI for the export server",initial:O.ui.enable.value},{type:"text",name:"route",message:"A route to attach the UI",initial:O.ui.route.value}],other:[{type:"toggle",name:"noLogo",message:"Skip printing the logo on startup. Replaced by simple text",initial:O.other.noLogo.value}]},I=["options","globalOptions","themeOptions","resources","payload"],C={},$=(e,t="")=>{Object.keys(e).forEach((r=>{if(!["puppeteer","highcharts"].includes(r)){const i=e[r];void 0===i.value?$(i,`${t}.${r}`):(C[i.cliName||r]=`${t}.${r}`.substring(1),void 0!==i.legacyName&&(C[i.legacyName]=`${t}.${r}`.substring(1)))}}))};$(O);const _=["red","yellow","blue","gray","green"];let N={toConsole:!0,toFile:!1,pathCreated:!1,levelsDesc:[{title:"error",color:_[0]},{title:"warning",color:_[1]},{title:"notice",color:_[2]},{title:"verbose",color:_[3]},{title:"benchmark",color:_[4]}],listeners:[]};for(const[e,t]of Object.entries(O.logging))N[e]=t.value;const P=(e,o)=>{N.toFile&&(N.pathCreated||(!t(N.dest)&&r(N.dest),N.pathCreated=!0),i(`${N.dest}${N.file}`,[o].concat(e).join(" ")+"\n",(e=>{e&&(console.log(`[logger] Unable to write to log file: ${e}`),N.toFile=!1)})))},A=(...e)=>{const[t,...r]=e,{level:i,levelsDesc:o}=N;if(5!==t&&(0===t||t>i||i>o.length))return;const n=`${(new Date).toString().split("(")[0].trim()} [${o[t-1].title}] -`;N.listeners.forEach((e=>{e(n,r.join(" "))})),N.toConsole&&console.log.apply(void 0,[n.toString()[N.levelsDesc[t-1].color]].concat(r)),P(r,n)},j=(e,t,r)=>{const i=r||t.message,{level:o,levelsDesc:n}=N;if(0===e||e>o||o>n.length)return;const s=`${(new Date).toString().split("(")[0].trim()} [${n[e-1].title}] -`,a=t.message!==t.stackMessage||void 0===t.stackMessage?t.stack:t.stack.split("\n").slice(1).join("\n"),l=[i,"\n",a];N.toConsole&&console.log.apply(void 0,[s.toString()[N.levelsDesc[e-1].color]].concat([i[_[e-1]],"\n",a])),N.listeners.forEach((e=>{e(s,l.join(" "))})),P(l,s)},H=e=>{e>=0&&e<=N.levelsDesc.length&&(N.level=e)},U=(e,t)=>{if(N={...N,dest:e||N.dest,file:t||N.file,toFile:!0},0===N.dest.length)return A(1,"[logger] File logging initialization: no path supplied.");N.dest.endsWith("/")||(N.dest+="/")},W=m(new URL("../.",import.meta.url)),D=(e,t)=>{const r=["png","jpeg","pdf","svg"];if(t){const i=t.split(".").pop();r.includes(i)&&e!==i&&(e=i)}return{"image/png":"png","image/jpeg":"jpeg","application/pdf":"pdf","image/svg+xml":"svg"}[e]||r.find((t=>t===e))||"png"},M=(e=!1,t)=>{const r=["js","css","files"];let i=e,n=!1;if(t&&e.endsWith(".json"))try{i=F(o(e,"utf8"))}catch(e){return j(2,e,"[cli] No resources found.")}else i=F(e),i&&!t&&delete i.files;for(const e in i)r.includes(e)?n||(n=!0):delete i[e];return n?(i.files&&(i.files=i.files.map((e=>e.trim())),(!i.files||i.files.length<=0)&&delete i.files),i):A(3,"[cli] No resources found.")};function F(e,t){try{const r=JSON.parse("string"!=typeof e?JSON.stringify(e):e);return"string"!=typeof r&&t?JSON.stringify(r):r}catch{return!1}}const q=e=>{if(null===e||"object"!=typeof e)return e;const t=Array.isArray(e)?[]:{};for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=q(e[r]));return t},G=(e,t)=>JSON.stringify(e,((e,r)=>("string"==typeof r&&((r=r.trim()).startsWith("function(")||r.startsWith("function ("))&&r.endsWith("}")&&(r=t?`EXP_FUN${(r+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:void 0),"function"==typeof r?`EXP_FUN${(r+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:r))).replaceAll(/"EXP_FUN|EXP_FUN"/g,"");function V(){console.log("\nUsage of CLI arguments:".bold,"\n------",`\nFor more detailed information, visit the readme at: ${"https://github.com/highcharts/node-export-server#readme".bold.yellow}.`);const e=t=>{for(const[r,i]of Object.entries(t))if(Object.prototype.hasOwnProperty.call(i,"value")){let e=`  --${i.cliName||r} ${("<"+i.type+">").green} `;if(e.length<48)for(let t=e.length;t<48;t++)e+=".";console.log(e,i.description,`[Default: ${i.value.toString().bold}]`.blue)}else e(i)};Object.keys(O).forEach((t=>{["puppeteer","highcharts"].includes(t)||(console.log(`\n${t.toUpperCase()}`.red),e(O[t]))})),console.log("\n")}const J=e=>!["false","undefined","null","NaN","0",""].includes(e)&&!!e,K=(e,t)=>{if(e&&"string"==typeof e)return(e=e.trim()).endsWith(".js")?!!t&&K(o(e,"utf8")):e.startsWith("function()")||e.startsWith("function ()")||e.startsWith("()=>")||e.startsWith("() =>")?`(${e})()`:e.replace(/;$/,"")},z=()=>{const e=process.hrtime.bigint();return()=>Number(process.hrtime.bigint()-e)/1e6};class X extends Error{constructor(e){super(),this.message=e,this.stackMessage=e}setError(e){return this.error=e,e.name&&(this.name=e.name),e.statusCode&&(this.statusCode=e.statusCode),e.stack&&(this.stackMessage=e.message,this.stack=e.stack),this}}p.config();const B={cdnURL:"https://code.highcharts.com/",activeManifest:{},sources:"",hcVersion:""};let Y=!1;const Q=()=>B.hcVersion=B.sources.substring(0,B.sources.indexOf("*/")).replace("/*","").replace("*/","").replace(/\n/g,"").trim(),Z=async(e,t,r,i=!1)=>{e.endsWith(".js")&&(e=e.substring(0,e.length-3)),A(4,`[cache] Fetching script - ${e}.js`);const o=t?{agent:t,timeout:+process.env.PROXY_SERVER_TIMEOUT||5e3}:{},n=await S(`${e}.js`,o);if(200===n.statusCode&&"string"==typeof n.text){if(r){r[e.replace(/(.*)\/|(.*)modules\/|stock\/(.*)indicators\/|maps\/(.*)modules\//gi,"")]=1}return n.text}if(i)throw new X(`Could not fetch the ${e}.js. The script might not exist in the requested version (status code: ${n.statusCode}).`).setError(n);return A(2,`[cache] Could not fetch the ${e}.js. The script might not exist in the requested version.`),""},ee=async(e,t)=>{const{coreScripts:r,modules:i,indicators:o,scripts:s}=e,a="latest"!==e.version&&e.version?`${e.version}/`:"";let l;A(3,`[cache] Updating cache version to Highcharts: ${a||"latest"}.`);const c=process.env.PROXY_SERVER_HOST,p=process.env.PROXY_SERVER_PORT;if(c&&p)try{l=new h({host:c,port:+p})}catch(e){throw new X("[cache] Could not create a Proxy Agent.").setError(e)}const u={};try{return B.sources=await(async(e,t,r,i,o,n)=>{const s=[...e.map((e=>Z(`${i}${e}`,o,n,!0))),...t.map((e=>Z(`${i}${e}`,o,n))),...r.map((e=>Z(`${e}`,o)))];return(await Promise.all(s)).join(";\n")})([...r.map((e=>`${a}${e}`))],[...i.map((e=>"map"===e?`maps/${a}modules/${e}`:`${a}modules/${e}`)),...o.map((e=>`stock/${a}indicators/${e}`))],s,e.cdnURL||B.cdnURL,l,u),Q(),n(t,B.sources),u}catch(e){throw new X("[cache] Unable to update the local Highcharts cache.").setError(e)}},te=async e=>{const i=l(W,e.cachePath);let s;const a=l(i,"manifest.json"),c=l(i,"sources.js");if(Y=e,!t(i)&&r(i),!t(a)||e.forceFetch)A(3,"[cache] Fetching and caching Highcharts dependencies."),s=await ee(e,c);else{let t=!1;const r=JSON.parse(o(a));if(r.modules&&Array.isArray(r.modules)){const e={};r.modules.forEach((t=>e[t]=1)),r.modules=e}const{modules:i,coreScripts:n,indicators:l}=e,p=i.length+n.length+l.length;r.version!==e.version?(A(2,"[cache] A Highcharts version mismatch in the cache, need to re-fetch."),t=!0):Object.keys(r.modules||{}).length!==p?(A(2,"[cache] The cache and the requested modules do not match, need to re-fetch."),t=!0):t=(e.modules||[]).some((e=>{if(!r.modules[e])return A(2,`[cache] The ${e} is missing in the cache, need to re-fetch.`),!0})),t?s=await ee(e,c):(A(3,"[cache] Dependency cache is up to date, proceeding."),B.sources=o(c,"utf8"),s=r.modules,Q())}await(async(e,t)=>{const r={version:e.version,modules:t||{}};B.activeManifest=r,A(3,"[cache] Writing a new manifest.");try{n(l(W,e.cachePath,"manifest.json"),JSON.stringify(r),"utf8")}catch(e){throw new X("[cache] Error writing the cache manifest.").setError(e)}})(e,s)},re=()=>l(W,Y.cachePath);var ie=async e=>!!Y&&await te(Object.assign(Y,{version:e})),oe=()=>B,ne=()=>B.hcVersion;let se={};const ae=()=>se,le=(e,t,r=[])=>{const i=q(e);for(const[e,n]of Object.entries(t))i[e]="object"!=typeof(o=n)||Array.isArray(o)||null===o||r.includes(e)||void 0===i[e]?void 0!==n?n:i[e]:le(i[e],n,r);var o;return i};function ce(e,t={},r=""){Object.keys(e).forEach((i=>{const o=e[i],n=t&&t[i];let s;void 0===o.value?ce(o,n,`${r}.${i}`):(void 0!==n&&(o.value=n),o.envLink&&("boolean"===o.type?o.value=J([process.env[o.envLink],o.value].find((e=>e||"false"===e))):"number"===o.type?(s=+process.env[o.envLink],o.value=s>=0?s:o.value):o.type.indexOf("]")>=0&&process.env[o.envLink]?o.value=process.env[o.envLink].split(","):o.value=process.env[o.envLink]||o.value))}))}function pe(e){let t={};for(const[r,i]of Object.entries(e))t[r]=Object.prototype.hasOwnProperty.call(i,"value")?i.value:pe(i);return t}function he(e,t,r){for(;t.length>1;){const i=t.shift();return Object.prototype.hasOwnProperty.call(e,i)||(e[i]={}),e[i]=he(Object.assign({},e[i]),t,r),e}return e[t[0]]=r,e}const ue=T(64).toString("base64url"),de=w.join("tmp",`puppeteer-${ue}`),ge=[`--user-data-dir=${w.join(de,"profile")}`,"--autoplay-policy=user-gesture-required","--disable-background-networking","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-breakpad","--disable-client-side-phishing-detection","--disable-component-update","--disable-default-apps","--disable-dev-shm-usage","--disable-domain-reliability","--disable-extensions","--disable-features=AudioServiceOutOfProcess","--disable-hang-monitor","--disable-ipc-flooding-protection","--disable-notifications","--disable-offer-store-unmasked-wallet-cards","--disable-popup-blocking","--disable-print-preview","--disable-prompt-on-repost","--disable-renderer-backgrounding","--disable-session-crashed-bubble","--disable-setuid-sandbox","--disable-speech-api","--disable-sync","--hide-crash-restore-bubble","--hide-scrollbars","--ignore-gpu-blacklist","--metrics-recording-only","--mute-audio","--no-default-browser-check","--no-first-run","--no-pings","--no-sandbox","--no-zygote","--password-store=basic","--use-mock-keychain"],me=g.fileURLToPath(new URL(".",import.meta.url)),fe=e.readFileSync(me+"/../templates/template.html","utf8");let ve;const ye=async e=>{await e.setContent(fe),await e.addScriptTag({path:`${re()}/sources.js`}),await e.evaluate((()=>window.setupHighcharts())),e.on("pageerror",(async t=>{await e.$eval("#container",((e,t)=>{window._displayErrors&&(e.innerHTML=t)}),`<h1>Chart input data error</h1>${t.toString()}`)}))},we=async(e,t=!1)=>{try{t?(await e.goto("about:blank"),await ye(e)):await e.evaluate((()=>{document.body.innerHTML='<div id="chart-container"><div id="container"></div></div>'}))}catch(e){j(2,e,"[browser] Could not clear the content of the page.")}},be=async()=>{if(!ve)return!1;const e=await ve.newPage();return await e.setCacheEnabled(!1),await ye(e),e},Te=async()=>(ve?.isConnected()&&(await ve.close(),A(4,"[browser] Closed the browser.")),!0);const ke=g.fileURLToPath(new URL(".",import.meta.url)),xe=(e,t,r)=>e.evaluate(((e,t)=>window.triggerExport(e,t)),t,r);var Ee=async(e,t,r)=>{const i=[],n=async e=>{for(const e of i)await e.dispose();await e.evaluate((()=>{const[,...e]=document.getElementsByTagName("script"),[,...t]=document.getElementsByTagName("style"),[...r]=document.getElementsByTagName("link");for(const i of[...e,...t,...r])i.remove()}))};try{A(4,"[export] Determining export path.");const s=r.export;await e.evaluate((()=>requestAnimationFrame((()=>{}))));const l=s?.options?.chart?.displayErrors&&oe().activeManifest.modules.debugger;let c;if(await e.evaluate((e=>window._displayErrors=e),l),t.indexOf&&(t.indexOf("<svg")>=0||t.indexOf("<?xml")>=0)){if(A(4,"[export] Treating as SVG."),"svg"===s.type)return t;c=!0,await e.setContent((e=>`\n<!DOCTYPE html>\n<html lang='en-US'>\n  <head>\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\n    <title>Highcarts Export</title>\n  </head>\n  <style>\n    \n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#table-div, #sliders, #datatable, #controls, .ld-row {\n  display: none;\n  height: 0;\n}\n\n#chart-container {\n  box-sizing: border-box;\n  margin: 0;\n  overflow: auto;\n  font-size: 0;\n}\n\n#chart-container > figure, div {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n\n  </style>\n  <body>\n    <div id="chart-container">\n      ${e}\n    </div>\n  </body>\n</html>\n\n`)(t))}else A(4,"[export] Treating as config."),s.strInj?await xe(e,{chart:{height:s.height,width:s.width}},r):(t.chart.height=s.height,t.chart.width=s.width,await xe(e,t,r));const p=r.customLogic.resources;if(p){if(p.js&&i.push(await e.addScriptTag({content:p.js})),p.files)for(const t of p.files)try{const r=!t.startsWith("http");i.push(await e.addScriptTag(r?{content:o(t,"utf8")}:{url:t}))}catch(e){j(2,e,`[export] The JS file ${t} cannot be loaded.`)}if(p.css){let t=p.css.match(/@import\s*([^;]*);/g);if(t)for(let o of t)o&&(o=o.replace("url(","").replace("@import","").replace(/"/g,"").replace(/'/g,"").replace(/;/,"").replace(/\)/g,"").trim(),o.startsWith("http")?i.push(await e.addStyleTag({url:o})):r.customLogic.allowFileResources&&i.push(await e.addStyleTag({path:a.join(ke,o)})));i.push(await e.addStyleTag({content:p.css.replace(/@import\s*([^;]*);/g,"")||" "}))}}const h=c?await e.$eval("#chart-container svg:first-of-type",((e,t)=>({chartHeight:e.height.baseVal.value*t,chartWidth:e.width.baseVal.value*t})),parseFloat(s.scale)):await e.evaluate((()=>{const{chartHeight:e,chartWidth:t}=window.Highcharts.charts[0];return{chartHeight:e,chartWidth:t}})),u=Math.ceil(h?.chartHeight||s.height),d=Math.ceil(h?.chartWidth||s.width);await e.setViewport({height:u,width:d,deviceScaleFactor:c?1:parseFloat(s.scale)});const g=c?e=>{document.body.style.zoom=e,document.body.style.margin="0px"}:()=>{document.body.style.zoom=1};await e.evaluate(g,parseFloat(s.scale));const{height:m,width:f,x:v,y:y}=await(e=>e.$eval("#chart-container",(e=>{const{x:t,y:r,width:i,height:o}=e.getBoundingClientRect();return{x:t,y:r,width:i,height:Math.trunc(o>1?o:500)}})))(e);let w;if(c||await e.setViewport({width:Math.round(f),height:Math.round(m),deviceScaleFactor:parseFloat(s.scale)}),"svg"===s.type)w=await(e=>e.$eval("#container svg:first-of-type",(e=>e.outerHTML)))(e);else if("png"===s.type||"jpeg"===s.type)w=await((e,t,r,i,o)=>Promise.race([e.screenshot({type:t,encoding:r,clip:i,omitBackground:"png"==t}),new Promise(((e,t)=>setTimeout((()=>t(new X("Rasterization timeout"))),o||1500)))]))(e,s.type,"base64",{width:d,height:u,x:v,y:y},s.rasterizationTimeout);else{if("pdf"!==s.type)throw new X(`[export] Unsupported output format ${s.type}.`);w=await((e,t,r,i)=>e.pdf({height:t+1,width:r,encoding:i}))(e,u,d,"base64")}return await e.evaluate((()=>{if("undefined"!=typeof Highcharts){const e=Highcharts.charts;if(Array.isArray(e)&&e.length)for(const t of e)t&&t.destroy(),Highcharts.charts.shift()}})),await n(e),w}catch(t){return await n(e),t}};let Le,Se=0,Oe=0,Re=0,Ie=0,Ce=0,$e={},_e=!1;const Ne={create:async()=>{let e=!1;const t=y(),r=(new Date).getTime();try{if(e=await be(),!e||e.isClosed())throw new X("The page is invalid or closed.");A(3,`[pool] Successfully created a worker ${t} - took ${(new Date).getTime()-r} ms.`)}catch(e){throw new X("Error encountered when creating a new page.").setError(e)}return{id:t,page:e,workCount:Math.round(Math.random()*($e.workLimit/2))}},validate:async e=>$e.workLimit&&++e.workCount>$e.workLimit?(A(3,`[pool] Worker failed validation: exceeded work limit (limit is ${$e.workLimit}).`),!1):(await we(e.page,!0),!0),destroy:e=>{A(3,`[pool] Destroying pool entry ${e.id}.`),e.page&&e.page.close()}},Pe=async e=>{if($e=e&&e.pool?{...e.pool}:{},$e.listenToProcessExits&&(A(3,"[pool] Attaching exit listeners to the process."),process.on("exit",(async e=>{A(4,`Process exited with code ${e}.`),await Ae()})),process.on("SIGINT",((e,t)=>{A(4,`The ${e} event with code: ${t}.`),process.exit(1)})),process.on("SIGTERM",((e,t)=>{A(4,`The ${e} event with code: ${t}.`),process.exit(1)})),process.on("uncaughtException",(async(e,t)=>{j(1,e,`The ${t} error.`),await Ae(),process.exit(1)}))),Le=e.puppeteerArgs,await(async e=>{const t=[...ge,...e||[]];if(!ve){let e=0;const r=async()=>{try{A(3,`[browser] Attempting to get a browser instance (try ${++e}).`),ve=await b.launch({headless:"new",args:t,userDataDir:"./tmp/"})}catch(t){if(j(1,t,"[browser] Failed to launch a browser instance."),!(e<25))throw t;A(3,`[browser] Retry to open a browser (${e} out of 25).`),await new Promise((e=>setTimeout(e,4e3))),await r()}};try{await r()}catch(e){throw new X("[browser] Maximum retries to open a browser instance reached.").setError(e)}if(!ve)throw new X("[browser] Cannot find a browser to open.")}return ve})(Le),A(3,`[pool] Initializing pool with workers: min ${$e.minWorkers}, max ${$e.maxWorkers}.`),_e)return A(4,"[pool] Already initialized, please kill it before creating a new one.");parseInt($e.minWorkers)>parseInt($e.maxWorkers)&&($e.minWorkers=$e.maxWorkers);try{_e=new v({...Ne,min:parseInt($e.minWorkers),max:parseInt($e.maxWorkers),acquireTimeoutMillis:$e.acquireTimeout,createTimeoutMillis:$e.createTimeout,destroyTimeoutMillis:$e.destroyTimeout,idleTimeoutMillis:$e.idleTimeout,createRetryIntervalMillis:$e.createRetryInterval,reapIntervalMillis:$e.reaperInterval,propagateCreateError:!1}),_e.on("release",(async e=>{await we(e.page,!1),A(4,`[pool] Releasing a worker with ID ${e.id}.`)})),_e.on("destroySuccess",((e,t)=>{A(4,`[pool] Destroyed a worker with ID ${t.id}.`)}));const e=[];for(let t=0;t<$e.minWorkers;t++)try{const t=await _e.acquire().promise;e.push(t)}catch(e){j(2,e,"[pool] Could not create an initial resource.")}e.forEach((e=>{_e.release(e)})),A(3,"[pool] The pool is ready"+(e.length?` with ${e.length} initial resources waiting.`:"."))}catch(e){throw await Te(),new X("[pool] Could not create the pool of workers.").setError(e)}};async function Ae(){return A(3,"[pool] Killing all pool workers and browser, if any exist."),_e?.destroyed||_e&&(await _e.destroy(),A(4,"[browser] Destroyed the pool of resources.")),Te()}const je=async(e,t)=>{let r;try{if(A(4,"[pool] Work received, starting to process."),++Oe,$e.benchmarking&&He(),!_e)throw new X("Work received, but pool has not been started.");try{A(4,"[pool] Acquiring a worker handle.");const e=z();r=await _e.acquire().promise,t.server.benchmarking&&A(5,t.payload?.requestId?`[benchmark] Request with ID ${t.payload?.requestId} -`:"[benchmark]",`Acquired a worker handle: ${e()}ms.`)}catch(e){throw new X("Error encountered when acquiring an available entry.").setError(e)}if(A(4,"[pool] Acquired a worker handle."),!r.page)throw new X("Resolved worker page is invalid: the pool setup is wonky.");let i=(new Date).getTime();A(4,`[pool] Starting work on pool entry with ID ${r.id}.`);const o=z(),n=await Ee(r.page,e,t);if(n instanceof Error)throw"Rasterization timeout"===n.message&&(r.page.close(),r.page=await be()),new X("Error encountered during export.").setError(n);t.server.benchmarking&&A(5,t.payload?.requestId?`[benchmark] Request with ID ${t.payload?.requestId} -`:"[benchmark]",`Exported a chart sucessfully: ${o()}ms.`),_e.release(r);const s=(new Date).getTime()-i;return Re+=s,Ce=Re/++Se,A(4,`[pool] Work completed in ${s} ms.`),{result:n,options:t}}catch(e){throw++Ie,r&&_e.release(r),new X(`[pool] In pool.postWork: ${e.message}`).setError(e)}};function He(){const{min:e,max:t}=_e;A(5,`[pool] The minimum number of resources allowed by pool: ${e}.`),A(5,`[pool] The maximum number of resources allowed by pool: ${t}.`),A(5,`[pool] The number of resources that are currently available: ${_e.numFree()}.`),A(5,`[pool] The number of resources that are currently acquired: ${_e.numUsed()}.`),A(5,`[pool] The number of callers waiting to acquire a resource: ${_e.numPendingAcquires()}.`)}var Ue=()=>({min:_e.min,max:_e.max,available:_e.numFree(),inUse:_e.numUsed(),pendingAcquire:_e.numPendingAcquires()}),We=()=>Oe,De=()=>Ie,Me=()=>Ce,Fe=()=>Se;let qe=!1;const Ge=async(e,t)=>{A(4,"[chart] Starting the exporting process.");const r=((e,t={})=>{let r={};return e.svg?(r=q(t),r.export.type=e.type||e.export.type,r.export.scale=e.scale||e.export.scale,r.export.outfile=e.outfile||e.export.outfile,r.payload={svg:e.svg}):r=le(t,e,I),r.export.outfile=r.export?.outfile||`chart.${r.export?.type||"png"}`,r})(e,ae()),i=r.export;if(r.payload?.svg&&""!==r.payload.svg)try{return A(4,"[chart] Attempting to export from a SVG input."),ze(r.payload.svg.trim(),r,t)}catch(e){return t(new X("[chart] Error loading SVG input.").setError(e))}if(i.infile&&i.infile.length)try{return A(4,"[chart] Attempting to export from an input file."),r.export.instr=o(i.infile,"utf8"),ze(r.export.instr.trim(),r,t)}catch(e){return t(new X("[chart] Error loading input file.").setError(e))}if(i.instr&&""!==i.instr||i.options&&""!==i.options)try{return A(4,"[chart] Attempting to export from a raw input."),J(r.customLogic?.allowCodeExecution)?Ke(r,t):"string"==typeof i.instr?ze(i.instr.trim(),r,t):Je(r,i.instr||i.options,t)}catch(e){return t(new X("[chart] Error loading raw input.").setError(e))}return t(new X("[chart] No valid input specified. Check if at least one of the following parameters is correctly set: 'infile', 'instr', 'options', or 'svg'."))},Ve=e=>{const{chart:t,exporting:r}=e.export?.options||F(e.export?.instr),i=F(e.export?.globalOptions);let o=e.export?.scale||r?.scale||i?.exporting?.scale||e.export?.defaultScale||1;o=Math.max(.1,Math.min(o,5)),o=((e,t=1)=>{const r=Math.pow(10,t||0);return Math.round(+e*r)/r})(o,2);const n={height:e.export?.height||r?.sourceHeight||t?.height||i?.exporting?.sourceHeight||i?.chart?.height||e.export?.defaultHeight||400,width:e.export?.width||r?.sourceWidth||t?.width||i?.exporting?.sourceWidth||i?.chart?.width||e.export?.defaultWidth||600,scale:o};for(let[e,t]of Object.entries(n))n[e]="string"==typeof t?+t.replace(/px|%/gi,""):t;return n},Je=async(e,t,r,i)=>{let{export:n,customLogic:s}=e;const a="boolean"==typeof s.allowCodeExecution?s.allowCodeExecution:qe;if(s){if(a)if("string"==typeof e.customLogic.resources)e.customLogic.resources=M(e.customLogic.resources,J(e.customLogic.allowFileResources));else if(!e.customLogic.resources)try{const t=o("resources.json","utf8");e.customLogic.resources=M(t,J(e.customLogic.allowFileResources))}catch(e){j(2,e,"[chart] Unable to load the default resources.json file.")}}else s=e.customLogic={};if(!a&&s){if(s.callback||s.resources||s.customCode)return r(new X("[chart] The 'callback', 'resources' and 'customCode' options have been disabled for this server."));s.callback=!1,s.resources=!1,s.customCode=!1}if(t&&(t.chart=t.chart||{},t.exporting=t.exporting||{},t.exporting.enabled=!1),n.constr=n.constr||"chart",n.type=D(n.type,n.outfile),"svg"===n.type&&(n.width=!1),["globalOptions","themeOptions"].forEach((e=>{try{n&&n[e]&&("string"==typeof n[e]&&n[e].endsWith(".json")?n[e]=F(o(n[e],"utf8"),!0):n[e]=F(n[e],!0))}catch(t){n[e]={},j(2,t,`[chart] The '${e}' cannot be loaded.`)}})),s.allowCodeExecution)try{s.customCode=K(s.customCode,s.allowFileResources)}catch(e){j(2,e,"[chart] The 'customCode' cannot be loaded.")}if(s&&s.callback&&s.callback?.indexOf("{")<0)if(s.allowFileResources)try{s.callback=o(s.callback,"utf8")}catch(e){s.callback=!1,j(2,e,"[chart] The 'callback' cannot be loaded.")}else s.callback=!1;e.export={...e.export,...Ve(e)};try{return r(!1,await je(n.strInj||t||i,e))}catch(e){return r(e)}},Ke=(e,t)=>{try{let r,i=e.export.instr||e.export.options;return"string"!=typeof i&&(r=i=G(i,e.customLogic?.allowCodeExecution)),r=i.replaceAll(/\t|\n|\r/g,"").trim(),";"===r[r.length-1]&&(r=r.substring(0,r.length-1)),e.export.strInj=r,Je(e,!1,t)}catch(r){return t(new X(`[chart] Malformed input detected for ${e.export?.requestId||"?"}. Please make sure that your JSON/JavaScript options are sent using the "options" attribute, and that if you're using SVG, it is unescaped.`).setError(r))}},ze=(e,t,r)=>{const{allowCodeExecution:i}=t.customLogic;if(e.indexOf("<svg")>=0||e.indexOf("<?xml")>=0)return A(4,"[chart] Parsing input as SVG."),Je(t,!1,r,e);try{const i=JSON.parse(e.replaceAll(/\t|\n|\r/g," "));return Je(t,i,r)}catch(e){return J(i)?Ke(t,r):r(new X("[chart] Only JSON configurations and SVG are allowed for this server. If this is your server, JavaScript custom code can be enabled by starting the server with the --allowCodeExecution flag.").setError(e))}},Xe=(e,t,r,i)=>{j(1,e),"development"!==process.env.NODE_ENV&&delete e.stack,i(e)},Be=(e,t,r,i)=>{const{statusCode:o,status:n,message:s,stack:a}=e,l=o||n||500;r.status(l).json({statusCode:l,message:s,stack:a})};var Ye=(e,t)=>{const r="Too many requests, you have been rate limited. Please try again later.",i={max:t.maxRequests||30,window:t.window||1,delay:t.delay||0,trustProxy:t.trustProxy||!1,skipKey:t.skipKey||!1,skipToken:t.skipToken||!1};i.trustProxy&&e.enable("trust proxy");const o=L({windowMs:60*i.window*1e3,max:i.max,delayMs:i.delay,handler:(e,t)=>{t.format({json:()=>{t.status(429).send({message:r})},default:()=>{t.status(429).send(r)}})},skip:e=>!1!==i.skipKey&&!1!==i.skipToken&&e.query.key===i.skipKey&&e.query.access_token===i.skipToken&&(A(4,"[rate limiting] Skipping rate limiter."),!0)});e.use(o),A(3,`[rate limiting] Enabled rate limiting with ${i.max} requests per ${i.window} minute for each IP, trusting proxy: ${i.trustProxy}.`)};class Qe extends X{constructor(e,t){super(e),this.status=this.statusCode=t}setStatus(e){return this.status=e,this}}const Ze={png:"image/png",jpeg:"image/jpeg",gif:"image/gif",pdf:"application/pdf",svg:"image/svg+xml"};let et=0;const tt=[],rt=[],it=(e,t,r,i)=>{let o=!0;const{id:n,uniqueId:s,type:a,body:l}=i;return e.some((e=>{if(e){let i=e(t,r,n,s,a,l);return void 0!==i&&!0!==i&&(o=i),!0}})),o},ot=async(e,t,r)=>{try{const r=z(),o=y().replace(/-/g,""),n=ae(),s=e.body,a=++et;let l=D(s.type);if(!s||"object"==typeof(i=s)&&null!==i&&0===Object.keys(i).length)throw new Qe("The request body is required. Please ensure that your Content-Type header is correct (accepted types are application/json and multipart/form-data).",400);let c=F(s.infile||s.options||s.data);if(!c&&!s.svg)throw A(2,`The request with ID ${o} from ${e.headers["x-forwarded-for"]||e.connection.remoteAddress} was incorrect. Payload received: ${JSON.stringify(s)}.`),new Qe("No correct chart data found. Ensure that you are using either application/json or multipart/form-data headers. If sending JSON, make sure the chart data is in the 'infile', 'options', or 'data' attribute. If sending SVG, ensure it is in the 'svg' attribute.",400);let p=!1;if(p=it(tt,e,t,{id:a,uniqueId:o,type:l,body:s}),!0!==p)return t.send(p);let h=!1;e.socket.on("close",(()=>{h=!0})),A(4,`[export] Got an incoming HTTP request with ID ${o}.`),s.constr="string"==typeof s.constr&&s.constr||"chart";const u={export:{instr:c,type:l,constr:s.constr[0].toLowerCase()+s.constr.substr(1),height:s.height,width:s.width,scale:s.scale||n.export.scale,globalOptions:F(s.globalOptions,!0),themeOptions:F(s.themeOptions,!0)},customLogic:{allowCodeExecution:qe,allowFileResources:!1,resources:F(s.resources,!0),callback:s.callback,customCode:s.customCode}};c&&(u.export.instr=G(c,u.customLogic.allowCodeExecution));const d=le(n,u);if(d.export.options=c,d.payload={svg:s.svg||!1,b64:s.b64||!1,noDownload:s.noDownload||!1,requestId:o},s.svg&&(e=>["localhost","(10).(.*).(.*).(.*)","(127).(.*).(.*).(.*)","(172).(1[6-9]|2[0-9]|3[0-1]).(.*).(.*)","(192).(168).(.*).(.*)"].some((t=>e.match(`xlink:href="(?:(http://|https://))?${t}`))))(d.payload.svg))throw new Qe("SVG potentially contain at least one forbidden URL in xlink:href element. Please review the SVG content and ensure that all referenced URLs comply with security policies.",400);await Ge(d,((i,c)=>{if(e.socket.removeAllListeners("close"),n.server.benchmarking&&A(5,`[benchmark] Request with ID ${o} - After the whole exporting process: ${r()}ms.`),h)return A(3,"[export] The client closed the connection before the chart finished processing.");if(i)throw i;if(!c||!c.result)throw new Qe(`Unexpected return from chart generation. Please check your request data. For the request with ID ${o}, the result is ${c.result}.`,400);return l=c.options.export.type,it(rt,e,t,{id:a,body:c.result}),c.result?s.b64?"pdf"===l||"svg"==l?t.send(Buffer.from(c.result,"utf8").toString("base64")):t.send(c.result):(t.header("Content-Type",Ze[l]||"image/png"),s.noDownload||t.attachment(`${e.params.filename||e.body.filename||"chart"}.${l||"png"}`),"svg"===l?t.send(c.result):t.send(Buffer.from(c.result,"base64"))):void 0}))}catch(e){r(e)}var i};const nt=JSON.parse(o(l(W,"package.json"))),st=new Date;const at=x();at.disable("x-powered-by"),at.use(k());const lt=E.memoryStorage(),ct=E({storage:lt,limits:{fieldSize:52428800}});at.use(x.json({limit:52428800})),at.use(x.urlencoded({extended:!0,limit:52428800})),at.use(ct.none());const pt=e=>{e.on("clientError",(e=>{j(1,e,`[server] Client error: ${e.message}`)})),e.on("error",(e=>{j(1,e,`[server] Server error: ${e.message}`)})),e.on("connection",(e=>{e.on("error",(e=>{j(1,e,`[server] Socket error: ${e.message}`)}))}))},ht=async e=>{try{if(!e.enable)return!1;if(!e.ssl.force){const t=u.createServer(at);pt(t),t.listen(e.port,e.host),A(3,`[server] Started HTTP server on ${e.host}:${e.port}.`)}if(e.ssl.enable){let t,r;try{t=await s.readFile(c.join(e.ssl.certPath,"server.key"),"utf8"),r=await s.readFile(c.join(e.ssl.certPath,"server.crt"),"utf8")}catch(t){A(2,`[server] Unable to load key/certificate from the '${e.ssl.certPath}' path. Could not run secured layer server.`)}if(t&&r){const t=d.createServer(at);pt(t),t.listen(e.ssl.port,e.host),A(3,`[server] Started HTTPS server on ${e.host}:${e.ssl.port}.`)}}e.rateLimiting&&e.rateLimiting.enable&&![0,NaN].includes(e.rateLimiting.maxRequests)&&Ye(at,e.rateLimiting),at.use(x.static(c.join(W,"public"))),(e=>{!!e&&e.get("/health",((e,t)=>{t.send({status:"OK",bootTime:st,uptime:Math.floor(((new Date).getTime()-st.getTime())/1e3/60)+" minutes",version:nt.version,highchartsVersion:ne(),averageProcessingTime:Me(),performedExports:Fe(),failedExports:De(),exportAttempts:We(),sucessRatio:Fe()/We()*100,pool:Ue()})}))})(at),(e=>{e.post("/",ot),e.post("/:filename",ot)})(at),(e=>{!!e&&e.get("/",((e,t)=>{t.sendFile(l(W,"public","index.html"))}))})(at),(e=>{!!e&&e.post("/version/change/:newVersion",(async(e,t,r)=>{try{const r=process.env.HIGHCHARTS_ADMIN_TOKEN;if(!r||!r.length)throw new Qe("The server is not configured to perform run-time version changes: HIGHCHARTS_ADMIN_TOKEN is not set.",401);const i=e.get("hc-auth");if(!i||i!==r)throw new Qe("Invalid or missing token: Set the token in the hc-auth header.",401);const o=e.params.newVersion;if(!o)throw new Qe("No new version supplied.",400);try{await ie(o)}catch(e){throw new Qe(`Version change: ${e.message}`,e.statusCode).setError(e)}t.status(200).send({statusCode:200,version:ne(),message:`Successfully updated Highcharts to version: ${o}.`})}catch(e){r(e)}}))})(at),(e=>{e.use(Xe),e.use(Be)})(at)}catch(e){throw new X("[server] Could not configure and start the server.").setError(e)}};var ut={startServer:ht,enableRateLimiting:e=>Ye(at,e),getExpress:()=>x,getApp:()=>at,use:(e,...t)=>{at.use(e,...t)},get:(e,...t)=>{at.get(e,...t)},post:(e,...t)=>{at.post(e,...t)}};var dt={server:ut,startServer:ht,setOptions:(e,t)=>(t?.length&&(se=function(e){const t=e.findIndex((e=>"loadConfig"===e.replace(/-/g,"")));if(t>-1&&e[t+1]){const r=e[t+1];try{if(r&&r.endsWith(".json"))return JSON.parse(o(r))}catch(e){j(2,e,`[config] Unable to load the configuration from the ${r} file.`)}}return{}}(t)),ce(O,se),se=pe(O),e&&(se=le(se,e,I)),t?.length&&(se=function(e,t,r){let i=!1;for(let o=0;o<t.length;o++){const n=t[o].replace(/-/g,""),s=C[n]?C[n].split("."):[];let a;s.reduce(((e,t,r)=>(s.length-1===r&&(a=e[t].type),e[t])),r),s.reduce(((e,r,l)=>(s.length-1===l&&void 0!==e[r]&&(t[++o]?"boolean"===a?e[r]=J(t[o]):"number"===a?e[r]=+t[o]:a.indexOf("]")>=0?e[r]=t[o].split(","):e[r]=t[o]:(A(2,`[config] Missing value for the '${n}' argument. Using the default value.`),i=!0)),e[r])),e)}i&&V();return e}(se,t,O)),se),initExport:async e=>{var t;return t=e.customLogic&&e.customLogic.allowCodeExecution,qe=J(t),(e=>{H(e&&parseInt(e.level)),e&&e.dest&&U(e.dest,e.file||"highcharts-export-server.log")})(e.logging),await te(e.highcharts||{version:"latest"}),await Pe({pool:e.pool||{minWorkers:1,maxWorkers:1},puppeteerArgs:e.puppeteer?.args||[]}),e},singleExport:async e=>{e.export.instr=e.export.instr||e.export.options,await Ge(e,(async(e,t)=>{if(e)throw e;const{outfile:r,type:i}=t.options.export;n(r||`chart.${i}`,"svg"!==i?Buffer.from(t.result,"base64"):t.result),await Ae()}))},batchExport:async e=>{const t=[];for(let r of e.export.batch.split(";"))r=r.split("="),2===r.length&&t.push(Ge({...e,export:{...e.export,infile:r[0],outfile:r[1]}},((e,t)=>{if(e)throw e;n(t.options.export.outfile,Buffer.from(t.result,"base64"))})));try{await Promise.all(t),await Ae()}catch(e){throw new X("[chart] Error encountered during batch export.").setError(e)}},startExport:Ge,killPool:Ae,log:A,logWithStack:j,setLogLevel:H,enableFileLogging:U,mapToNewConfig:e=>{const t={};for(const[r,i]of Object.entries(e)){const e=C[r]?C[r].split("."):[];e.reduce(((t,r,o)=>t[r]=e.length-1===o?i:t[r]||{}),t)}return t},manualConfig:async e=>{let r={};t(e)&&(r=JSON.parse(o(e,"utf8")));const i=Object.keys(R).map((e=>({title:`${e} options`,value:e})));return f({type:"multiselect",name:"category",message:"Which category do you want to configure?",hint:"Space: Select specific, A: Select all, Enter: Confirm.",instructions:"",choices:i},{onSubmit:async(t,i)=>{let o=0,n=[];for(const e of i)R[e]=R[e].map((t=>({...t,section:e}))),n=[...n,...R[e]];return await f(n,{onSubmit:async(t,i)=>{if("modules"===t.name?(i=i.length?i.map((e=>t.choices[e])):t.choices,r[t.section][t.name]=i):r[t.section]=he(Object.assign({},r[t.section]||{}),t.name.split("."),t.choices?t.choices[i]:i),++o===n.length){try{await s.writeFile(e,JSON.stringify(r,null,2),"utf8")}catch(t){j(1,t,`[config] An error occurred while creating the ${e} file.`)}return!0}}}),!0}})},printLogo:e=>{const t=JSON.parse(o(l(W,"package.json"))).version;e?console.log(`Starting Highcharts Export Server v${t}...`):console.log(o(W+"/msg/startup.msg").toString().bold.yellow,`v${t}`)},printUsage:V};export{dt as default};
//# sourceMappingURL=index.esm.js.map
