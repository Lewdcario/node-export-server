import"colors";import{existsSync as e,mkdirSync as t,appendFile as r,readFileSync as o,promises as i,writeFileSync as n}from"fs";import s,{join as a,posix as c}from"path";import{HttpsProxyAgent as l}from"https-proxy-agent";import p from"prompts";import u from"dotenv";import{z as h}from"zod";import{fileURLToPath as d}from"url";import m from"http";import g from"https";import{Pool as f}from"tarn";import{v4 as v}from"uuid";import b from"puppeteer";import{JSDOM as y}from"jsdom";import w from"dompurify";import E from"cors";import T from"express";import S from"multer";import _ from"express-rate-limit";import R from"jsonwebtoken";import k from"ws";const O={core:["highcharts","highcharts-more","highcharts-3d"],modules:["stock","map","gantt","exporting","export-data","parallel-coordinates","accessibility","boost-canvas","boost","data","data-tools","draggable-points","static-scale","broken-axis","heatmap","tilemap","tiledwebmap","timeline","treemap","treegraph","item-series","drilldown","histogram-bellcurve","bullet","funnel","funnel3d","geoheatmap","pyramid3d","networkgraph","overlapping-datalabels","pareto","pattern-fill","pictorial","price-indicator","sankey","arc-diagram","dependency-wheel","series-label","solid-gauge","sonification","streamgraph","sunburst","variable-pie","variwide","vector","venn","windbarb","wordcloud","xrange","no-data-to-display","drag-panes","debugger","dumbbell","lollipop","cylinder","organization","dotplot","marker-clusters","hollowcandlestick","heikinashi","flowmap"],indicators:["indicators-all"]},x={puppeteer:{args:{value:["--allow-running-insecure-content","--ash-no-nudges","--autoplay-policy=user-gesture-required","--block-new-web-contents","--disable-accelerated-2d-canvas","--disable-background-networking","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-breakpad","--disable-checker-imaging","--disable-client-side-phishing-detection","--disable-component-extensions-with-background-pages","--disable-component-update","--disable-default-apps","--disable-dev-shm-usage","--disable-domain-reliability","--disable-extensions","--disable-features=CalculateNativeWinOcclusion,InterestFeedContentSuggestions,WebOTP","--disable-hang-monitor","--disable-ipc-flooding-protection","--disable-logging","--disable-notifications","--disable-offer-store-unmasked-wallet-cards","--disable-popup-blocking","--disable-print-preview","--disable-prompt-on-repost","--disable-renderer-backgrounding","--disable-search-engine-choice-screen","--disable-session-crashed-bubble","--disable-setuid-sandbox","--disable-site-isolation-trials","--disable-speech-api","--disable-sync","--enable-unsafe-webgpu","--hide-crash-restore-bubble","--hide-scrollbars","--metrics-recording-only","--mute-audio","--no-default-browser-check","--no-first-run","--no-pings","--no-sandbox","--no-startup-window","--no-zygote","--password-store=basic","--process-per-tab","--use-mock-keychain"],type:"string[]",description:"Arguments array to send to Puppeteer."}},highcharts:{version:{value:"latest",type:"string",envLink:"HIGHCHARTS_VERSION",description:"The Highcharts version to be used."},cdnURL:{value:"https://code.highcharts.com/",type:"string",envLink:"HIGHCHARTS_CDN_URL",description:"The CDN URL for Highcharts scripts to be used."},coreScripts:{value:O.core,type:"string[]",envLink:"HIGHCHARTS_CORE_SCRIPTS",description:"The core Highcharts scripts to fetch."},moduleScripts:{value:O.modules,type:"string[]",envLink:"HIGHCHARTS_MODULE_SCRIPTS",description:"The modules of Highcharts to fetch."},indicatorScripts:{value:O.indicators,type:"string[]",envLink:"HIGHCHARTS_INDICATOR_SCRIPTS",description:"The indicators of Highcharts to fetch."},customScripts:{value:["https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js","https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"],type:"string[]",description:"Additional custom scripts or dependencies to fetch."},forceFetch:{value:!1,type:"boolean",envLink:"HIGHCHARTS_FORCE_FETCH",description:"The flag to determine whether to refetch all scripts after each server rerun."},cachePath:{value:".cache",type:"string",envLink:"HIGHCHARTS_CACHE_PATH",description:"The path to the cache directory. It is used to store the Highcharts scripts and custom scripts."}},export:{infile:{value:!1,type:"string",description:"The input file should include a name and a type (json or svg). It must be correctly formatted as a JSON or SVG file."},instr:{value:!1,type:"string",description:"Input, provided in the form of a stringified JSON or SVG file, will override the --infile option."},options:{value:!1,type:"string",description:"An alias for the --instr option."},outfile:{value:!1,type:"string",description:"The output filename along with a type (jpeg, png, pdf, or svg). This will ignore the --type flag."},type:{value:"png",type:"string",envLink:"EXPORT_TYPE",description:"The file export format. It can be jpeg, png, pdf, or svg."},constr:{value:"chart",type:"string",envLink:"EXPORT_CONSTR",description:"The constructor to use. Can be chart, stockChart, mapChart, or ganttChart."},defaultHeight:{value:400,type:"number",envLink:"EXPORT_DEFAULT_HEIGHT",description:"the default height of the exported chart. Used when no value is set."},defaultWidth:{value:600,type:"number",envLink:"EXPORT_DEFAULT_WIDTH",description:"The default width of the exported chart. Used when no value is set."},defaultScale:{value:1,type:"number",envLink:"EXPORT_DEFAULT_SCALE",description:"The default scale of the exported chart. Used when no value is set."},height:{value:!1,type:"number",description:"The height of the exported chart, overriding the option in the chart settings."},width:{value:!1,type:"number",description:"The width of the exported chart, overriding the option in the chart settings."},scale:{value:!1,type:"number",description:"The scale of the exported chart, overriding the option in the chart settings. Ranges between 0.1 and 5.0."},globalOptions:{value:!1,type:"string",description:"Either a stringified JSON or a filename containing options to be passed into the Highcharts.setOptions."},themeOptions:{value:!1,type:"string",description:"Either a stringified JSON or a filename containing theme options to be passed into the Highcharts.setOptions."},batch:{value:!1,type:"string",description:'Initiates a batch job with a string containing input/output pairs: "in=out;in=out;...".'},rasterizationTimeout:{value:1500,type:"number",envLink:"EXPORT_RASTERIZATION_TIMEOUT",description:"The duration in milliseconds to wait for rendering a webpage."}},customLogic:{allowCodeExecution:{value:!1,type:"boolean",envLink:"CUSTOM_LOGIC_ALLOW_CODE_EXECUTION",description:"Controls whether the execution of arbitrary code is allowed during the exporting process."},allowFileResources:{value:!1,type:"boolean",envLink:"CUSTOM_LOGIC_ALLOW_FILE_RESOURCES",description:"Controls the ability to inject resources from the filesystem. This setting has no effect when running as a server."},customCode:{value:!1,type:"string",description:"Custom code to execute before chart initialization. It can be a function, code wrapped within a function, or a filename with the .js extension."},callback:{value:!1,type:"string",description:"JavaScript code to run during construction. It can be a function or a filename with the .js extension."},resources:{value:!1,type:"string",description:"Additional resource in the form of a stringified JSON, which may contain files, js, and css sections."},loadConfig:{value:!1,type:"string",legacyName:"fromFile",description:"A file containing a pre-defined configuration to use."},createConfig:{value:!1,type:"string",description:"Enables setting options through a prompt and saving them in a provided config file."}},server:{enable:{value:!1,type:"boolean",envLink:"SERVER_ENABLE",cliName:"enableServer",description:"When set to true, the server starts on the local IP address 0.0.0.0."},host:{value:"0.0.0.0",type:"string",envLink:"SERVER_HOST",description:"The hostname of the server. Additionally, it starts a server on the provided hostname."},port:{value:7801,type:"number",envLink:"SERVER_PORT",description:"The server port when enabled."},benchmarking:{value:!1,type:"boolean",envLink:"SERVER_BENCHMARKING",cliName:"serverBenchmarking",description:"Indicates whether to display the duration, in milliseconds, of specific actions that occur on the server while serving a request."},proxy:{host:{value:!1,type:"string",envLink:"SERVER_PROXY_HOST",cliName:"proxyHost",description:"The host of the proxy server to use, if it exists."},port:{value:8080,type:"number",envLink:"SERVER_PROXY_PORT",cliName:"proxyPort",description:"The port of the proxy server to use, if it exists."},timeout:{value:5e3,type:"number",envLink:"SERVER_PROXY_TIMEOUT",cliName:"proxyTimeout",description:"The timeout for the proxy server to use, if it exists."}},rateLimiting:{enable:{value:!1,type:"boolean",envLink:"SERVER_RATE_LIMITING_ENABLE",cliName:"enableRateLimiting",description:"Enables rate limiting for the server."},maxRequests:{value:10,type:"number",envLink:"SERVER_RATE_LIMITING_MAX_REQUESTS",legacyName:"rateLimit",description:"The maximum number of requests allowed in one minute."},window:{value:1,type:"number",envLink:"SERVER_RATE_LIMITING_WINDOW",description:"The time window, in minutes, for the rate limiting."},delay:{value:0,type:"number",envLink:"SERVER_RATE_LIMITING_DELAY",description:"The delay duration for each successive request before reaching the maximum limit."},trustProxy:{value:!1,type:"boolean",envLink:"SERVER_RATE_LIMITING_TRUST_PROXY",description:"Set this to true if the server is behind a load balancer."},skipKey:{value:!1,type:"string",envLink:"SERVER_RATE_LIMITING_SKIP_KEY",description:"Allows bypassing the rate limiter and should be provided with the skipToken argument."},skipToken:{value:!1,type:"string",envLink:"SERVER_RATE_LIMITING_SKIP_TOKEN",description:"Allows bypassing the rate limiter and should be provided with the skipKey argument."}},ssl:{enable:{value:!1,type:"boolean",envLink:"SERVER_SSL_ENABLE",cliName:"enableSsl",description:"Enables or disables the SSL protocol."},force:{value:!1,type:"boolean",envLink:"SERVER_SSL_FORCE",cliName:"sslForce",legacyName:"sslOnly",description:"When set to true, the server is forced to serve only over HTTPS."},port:{value:443,type:"number",envLink:"SERVER_SSL_PORT",cliName:"sslPort",description:"The port on which to run the SSL server."},certPath:{value:!1,type:"string",envLink:"SERVER_SSL_CERT_PATH",legacyName:"sslPath",description:"The path to the SSL certificate/key file."}}},pool:{minWorkers:{value:4,type:"number",envLink:"POOL_MIN_WORKERS",description:"The number of minimum and initial pool workers to spawn."},maxWorkers:{value:8,type:"number",envLink:"POOL_MAX_WORKERS",legacyName:"workers",description:"The number of maximum pool workers to spawn."},workLimit:{value:40,type:"number",envLink:"POOL_WORK_LIMIT",description:"The number of work pieces that can be performed before restarting the worker process."},acquireTimeout:{value:5e3,type:"number",envLink:"POOL_ACQUIRE_TIMEOUT",description:"The duration, in milliseconds, to wait for acquiring a resource."},createTimeout:{value:5e3,type:"number",envLink:"POOL_CREATE_TIMEOUT",description:"The duration, in milliseconds, to wait for creating a resource."},destroyTimeout:{value:5e3,type:"number",envLink:"POOL_DESTROY_TIMEOUT",description:"The duration, in milliseconds, to wait for destroying a resource."},idleTimeout:{value:3e4,type:"number",envLink:"POOL_IDLE_TIMEOUT",description:"The duration, in milliseconds, after which an idle resource is destroyed."},createRetryInterval:{value:200,type:"number",envLink:"POOL_CREATE_RETRY_INTERVAL",description:"The duration, in milliseconds, to wait before retrying the create process in case of a failure."},reaperInterval:{value:1e3,type:"number",envLink:"POOL_REAPER_INTERVAL",description:"The duration, in milliseconds, after which the check for idle resources to destroy is triggered."},benchmarking:{value:!1,type:"boolean",envLink:"POOL_BENCHMARKING",cliName:"poolBenchmarking",description:"Indicate whether to show statistics for the pool of resources or not."}},logging:{level:{value:4,type:"number",envLink:"LOGGING_LEVEL",cliName:"logLevel",description:"The logging level to be used."},file:{value:"highcharts-export-server.log",type:"string",envLink:"LOGGING_FILE",cliName:"logFile",description:"The name of a log file. The logDest option also needs to be set to enable file logging."},dest:{value:"log/",type:"string",envLink:"LOGGING_DEST",cliName:"logDest",description:"The path to store log files. This also enables file logging."}},ui:{enable:{value:!1,type:"boolean",envLink:"UI_ENABLE",cliName:"enableUi",description:"Enables or disables the user interface (UI) for the export server."},route:{value:"/",type:"string",envLink:"UI_ROUTE",cliName:"uiRoute",description:"The endpoint route to which the user interface (UI) should be attached."}},other:{nodeEnv:{value:"production",type:"string",envLink:"OTHER_NODE_ENV",description:"The type of Node.js environment."},listenToProcessExits:{value:!0,type:"boolean",envLink:"OTHER_LISTEN_TO_PROCESS_EXITS",description:"Decides whether or not to attach process.exit handlers."},noLogo:{value:!1,type:"boolean",envLink:"OTHER_NO_LOGO",description:"Skip printing the logo on a startup. Will be replaced by a simple text."},hardResetPage:{value:!1,type:"boolean",envLink:"OTHER_HARD_RESET_PAGE",description:"Decides if the page content should be reset entirely."},browserShellMode:{value:!0,type:"boolean",envLink:"OTHER_BROWSER_SHELL_MODE",description:"Decides if the browser runs in the shell mode."}},debug:{enable:{value:!1,type:"boolean",envLink:"DEBUG_ENABLE",cliName:"enableDebug",description:"Enables or disables debug mode for the underlying browser."},headless:{value:!0,type:"boolean",envLink:"DEBUG_HEADLESS",description:"Controls the mode in which the browser is launched when in the debug mode."},devtools:{value:!1,type:"boolean",envLink:"DEBUG_DEVTOOLS",description:"Decides whether to enable DevTools when the browser is in a headful state."},listenToConsole:{value:!1,type:"boolean",envLink:"DEBUG_LISTEN_TO_CONSOLE",description:"Decides whether to enable a listener for console messages sent from the browser."},dumpio:{value:!1,type:"boolean",envLink:"DEBUG_DUMPIO",description:"Redirects browser process stdout and stderr to process.stdout and process.stderr."},slowMo:{value:0,type:"number",envLink:"DEBUG_SLOW_MO",description:"Slows down Puppeteer operations by the specified number of milliseconds."},debuggingPort:{value:9222,type:"number",envLink:"DEBUG_DEBUGGING_PORT",description:"Specifies the debugging port."}},webSocket:{enable:{value:!1,type:"boolean",envLink:"WEB_SOCKET_ENABLE",cliName:"enableWs",description:"Enables or disables the WebSocket connection."},reconnect:{value:!1,type:"boolean",envLink:"WEB_SOCKET_RECONNECT",cliName:"wsReconnect",description:"Controls whether or not to try reconnecting to the WebSocket server in case of a disconnect."},rejectUnauthorized:{value:!1,type:"boolean",envLink:"WEB_SOCKET_REJECT_UNAUTHORIZED",cliName:"wsrejectUnauthorized",description:"Determines whether the client verifies the server's SSL/TLS certificate during the handshake process."},pingTimeout:{value:16e3,type:"number",envLink:"WEB_SOCKET_PING_TIMEOUT",cliName:"wsPingTimeout",description:"The timeout, in milliseconds, for the heartbeat mechanism between the client and server."},reconnectInterval:{value:3e3,type:"number",envLink:"WEB_SOCKET_RECONNECT_INTERVAL",cliName:"wsReconnectInterval",description:"The interval, in milliseconds, for the reconnect attempt."},reconnectAttempts:{value:3,type:"number",envLink:"WEB_SOCKET_RECONNECT_ATTEMPTS",cliName:"wsReconnectAttempts",description:"The number of reconnect attempts before returning a connection error."},messageInterval:{value:3,type:"number",envLink:"WEB_SOCKET_MESSAGE_INTERVAL",cliName:"wsMessageInterval",description:"The interval, in milliseconds, for auto sending the data through a WebSocket connection."},url:{value:!1,type:"string",envLink:"WEB_SOCKET_URL",cliName:"wsUrl",description:"The URL of the WebSocket server."},secret:{value:!1,type:"string",envLink:"WEB_SOCKET_SECRET",cliName:"wsSecret",description:"The secret used to create a JSON Web Token sent to the WebSocket server."}}},L={puppeteer:[{type:"list",name:"args",message:"Puppeteer arguments",initial:x.puppeteer.args.value.join(","),separator:","}],highcharts:[{type:"text",name:"version",message:"Highcharts version",initial:x.highcharts.version.value},{type:"text",name:"cdnURL",message:"The URL of CDN",initial:x.highcharts.cdnURL.value},{type:"multiselect",name:"coreScripts",message:"Available core scripts",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:x.highcharts.coreScripts.value},{type:"multiselect",name:"moduleScripts",message:"Available module scripts",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:x.highcharts.moduleScripts.value},{type:"multiselect",name:"indicatorScripts",message:"Available indicator scripts",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:x.highcharts.indicatorScripts.value},{type:"list",name:"customScripts",message:"Custom scripts",initial:x.highcharts.customScripts.value.join(","),separator:","},{type:"toggle",name:"forceFetch",message:"Force re-fetch the scripts",initial:x.highcharts.forceFetch.value},{type:"text",name:"cachePath",message:"The path to the cache directory",initial:x.highcharts.cachePath.value}],export:[{type:"select",name:"type",message:"The default export file type",hint:`Default: ${x.export.type.value}`,initial:0,choices:["png","jpeg","pdf","svg"]},{type:"select",name:"constr",message:"The default constructor for Highcharts",hint:`Default: ${x.export.constr.value}`,initial:0,choices:["chart","stockChart","mapChart","ganttChart"]},{type:"number",name:"defaultHeight",message:"The default fallback height of the exported chart",initial:x.export.defaultHeight.value},{type:"number",name:"defaultWidth",message:"The default fallback width of the exported chart",initial:x.export.defaultWidth.value},{type:"number",name:"defaultScale",message:"The default fallback scale of the exported chart",initial:x.export.defaultScale.value,min:.1,max:5},{type:"number",name:"rasterizationTimeout",message:"The rendering webpage timeout in milliseconds",initial:x.export.rasterizationTimeout.value}],customLogic:[{type:"toggle",name:"allowCodeExecution",message:"Enable execution of custom code",initial:x.customLogic.allowCodeExecution.value},{type:"toggle",name:"allowFileResources",message:"Enable file resources",initial:x.customLogic.allowFileResources.value}],server:[{type:"toggle",name:"enable",message:"Starts the server on 0.0.0.0",initial:x.server.enable.value},{type:"text",name:"host",message:"Server hostname",initial:x.server.host.value},{type:"number",name:"port",message:"Server port",initial:x.server.port.value},{type:"toggle",name:"benchmarking",message:"Enable server benchmarking",initial:x.server.benchmarking.value},{type:"text",name:"proxy.host",message:"The host of the proxy server to use",initial:x.server.proxy.host.value},{type:"number",name:"proxy.port",message:"The port of the proxy server to use",initial:x.server.proxy.port.value},{type:"number",name:"proxy.timeout",message:"The timeout for the proxy server to use",initial:x.server.proxy.timeout.value},{type:"toggle",name:"rateLimiting.enable",message:"Enable rate limiting",initial:x.server.rateLimiting.enable.value},{type:"number",name:"rateLimiting.maxRequests",message:"The maximum requests allowed per minute",initial:x.server.rateLimiting.maxRequests.value},{type:"number",name:"rateLimiting.window",message:"The rate-limiting time window in minutes",initial:x.server.rateLimiting.window.value},{type:"number",name:"rateLimiting.delay",message:"The delay for each successive request before reaching the maximum",initial:x.server.rateLimiting.delay.value},{type:"toggle",name:"rateLimiting.trustProxy",message:"Set to true if behind a load balancer",initial:x.server.rateLimiting.trustProxy.value},{type:"text",name:"rateLimiting.skipKey",message:"Allows bypassing the rate limiter when provided with the skipToken argument",initial:x.server.rateLimiting.skipKey.value},{type:"text",name:"rateLimiting.skipToken",message:"Allows bypassing the rate limiter when provided with the skipKey argument",initial:x.server.rateLimiting.skipToken.value},{type:"toggle",name:"ssl.enable",message:"Enable SSL protocol",initial:x.server.ssl.enable.value},{type:"toggle",name:"ssl.force",message:"Force serving only over HTTPS",initial:x.server.ssl.force.value},{type:"number",name:"ssl.port",message:"SSL server port",initial:x.server.ssl.port.value},{type:"text",name:"ssl.certPath",message:"The path to find the SSL certificate/key",initial:x.server.ssl.certPath.value}],pool:[{type:"number",name:"minWorkers",message:"The initial number of workers to spawn",initial:x.pool.minWorkers.value},{type:"number",name:"maxWorkers",message:"The maximum number of workers to spawn",initial:x.pool.maxWorkers.value},{type:"number",name:"workLimit",message:"The pieces of work that can be performed before restarting a Puppeteer process",initial:x.pool.workLimit.value},{type:"number",name:"acquireTimeout",message:"The number of milliseconds to wait for acquiring a resource",initial:x.pool.acquireTimeout.value},{type:"number",name:"createTimeout",message:"The number of milliseconds to wait for creating a resource",initial:x.pool.createTimeout.value},{type:"number",name:"destroyTimeout",message:"The number of milliseconds to wait for destroying a resource",initial:x.pool.destroyTimeout.value},{type:"number",name:"idleTimeout",message:"The number of milliseconds after an idle resource is destroyed",initial:x.pool.idleTimeout.value},{type:"number",name:"createRetryInterval",message:"The retry interval in milliseconds after a create process fails",initial:x.pool.createRetryInterval.value},{type:"number",name:"reaperInterval",message:"The reaper interval in milliseconds after triggering the check for idle resources to destroy",initial:x.pool.reaperInterval.value},{type:"toggle",name:"benchmarking",message:"Enable benchmarking for a resource pool",initial:x.pool.benchmarking.value}],logging:[{type:"number",name:"level",message:"The log level (0: silent, 1: error, 2: warning, 3: notice, 4: verbose, 5: benchmark)",initial:x.logging.level.value,round:0,min:0,max:5},{type:"text",name:"file",message:"A log file name. Set with the --logDest to enable file logging",initial:x.logging.file.value},{type:"text",name:"dest",message:"The path to log files. Enables file logging",initial:x.logging.dest.value}],ui:[{type:"toggle",name:"enable",message:"Enable UI for the export server",initial:x.ui.enable.value},{type:"text",name:"route",message:"A route to attach the UI",initial:x.ui.route.value}],other:[{type:"text",name:"nodeEnv",message:"The type of Node.js environment",initial:x.other.nodeEnv.value},{type:"toggle",name:"listenToProcessExits",message:"Set to false to skip attaching process.exit handlers",initial:x.other.listenToProcessExits.value},{type:"toggle",name:"noLogo",message:"Skip printing the logo on startup. Replaced by simple text",initial:x.other.noLogo.value},{type:"toggle",name:"hardResetPage",message:"Decides if the page content should be reset entirely",initial:x.other.hardResetPage.value},{type:"toggle",name:"browserShellMode",message:"Decides if the browser runs in the shell mode",initial:x.other.browserShellMode.value}],debug:[{type:"toggle",name:"enable",message:"Enables debug mode for the browser instance",initial:x.debug.enable.value},{type:"toggle",name:"headless",message:"The mode setting for the browser",initial:x.debug.headless.value},{type:"toggle",name:"devtools",message:"The DevTools for the headful browser",initial:x.debug.devtools.value},{type:"toggle",name:"listenToConsole",message:"The event listener for console messages from the browser",initial:x.debug.listenToConsole.value},{type:"toggle",name:"dumpio",message:"Redirects the browser stdout and stderr to NodeJS process",initial:x.debug.dumpio.value},{type:"number",name:"slowMo",message:"Puppeteer operations slow down in milliseconds",initial:x.debug.slowMo.value},{type:"number",name:"debuggingPort",message:"The port number for debugging",initial:x.debug.debuggingPort.value}],webSocket:[{type:"toggle",name:"enable",message:"Enables WebSocket connection",initial:x.webSocket.enable.value},{type:"toggle",name:"reconnect",message:"The reconnect mechanism for WebSocket connection",initial:x.webSocket.reconnect.value},{type:"toggle",name:"rejectUnauthorized",message:"Reject connection if WebSocket is not secured, SSL/TLS",initial:x.webSocket.rejectUnauthorized.value},{type:"number",name:"pingTimeout",message:"Timeout for the hearbeat mechanism",initial:x.webSocket.pingTimeout.value},{type:"number",name:"reconnectInterval",message:"Interval for the reconnect mechanism",initial:x.webSocket.reconnectInterval.value},{type:"number",name:"reconnectAttempts",message:"The number of reconnect attempts",initial:x.webSocket.reconnectAttempts.value},{type:"number",name:"messageInterval",message:"Interval for auto sending the data",initial:x.webSocket.messageInterval.value},{type:"text",name:"url",message:"The URL of the WebSocket server",initial:x.webSocket.url.value},{type:"text",name:"secret",message:"The secret for the JWT to WebSocket server",initial:x.webSocket.secret.value}]},I=["options","globalOptions","themeOptions","resources","payload"],C={},N=(e,t="")=>{Object.keys(e).forEach((r=>{if(!["puppeteer","highcharts"].includes(r)){const o=e[r];void 0===o.value?N(o,`${t}.${r}`):(C[o.cliName||r]=`${t}.${r}`.substring(1),void 0!==o.legacyName&&(C[o.legacyName]=`${t}.${r}`.substring(1)))}}))};N(x),u.config();const A=e=>h.string().transform((t=>t.split(",").map((e=>e.trim())).filter((t=>e.includes(t))))).transform((e=>e.length?e:void 0)),P=()=>h.enum(["true","false",""]).transform((e=>""!==e?"true"===e:void 0)),$=e=>h.enum([...e,""]).transform((e=>""!==e?e:void 0)),H=()=>h.string().trim().refine((e=>!["false","undefined","null","NaN"].includes(e)||""===e),(e=>({message:`The string contains forbidden values, received '${e}'`}))).transform((e=>""!==e?e:void 0)),U=()=>h.string().trim().refine((e=>""===e||!isNaN(parseFloat(e))&&parseFloat(e)>0),(e=>({message:`The value must be numeric and positive, received '${e}'`}))).transform((e=>""!==e?parseFloat(e):void 0)),D=()=>h.string().trim().refine((e=>""===e||!isNaN(parseFloat(e))&&parseFloat(e)>=0),(e=>({message:`The value must be numeric and non-negative, received '${e}'`}))).transform((e=>""!==e?parseFloat(e):void 0)),W=h.object({HIGHCHARTS_VERSION:h.string().trim().refine((e=>/^(latest|\d+(\.\d+){0,2})$/.test(e)||""===e),(e=>({message:`HIGHCHARTS_VERSION must be 'latest', a major version, or in the form XX.YY.ZZ, received '${e}'`}))).transform((e=>""!==e?e:void 0)),HIGHCHARTS_CDN_URL:h.string().trim().refine((e=>e.startsWith("https://")||e.startsWith("http://")||""===e),(e=>({message:`Invalid value for HIGHCHARTS_CDN_URL. It should start with http:// or https://, received '${e}'`}))).transform((e=>""!==e?e:void 0)),HIGHCHARTS_CORE_SCRIPTS:A(O.core),HIGHCHARTS_MODULE_SCRIPTS:A(O.modules),HIGHCHARTS_INDICATOR_SCRIPTS:A(O.indicators),HIGHCHARTS_FORCE_FETCH:P(),HIGHCHARTS_CACHE_PATH:H(),HIGHCHARTS_ADMIN_TOKEN:H(),EXPORT_TYPE:$(["jpeg","png","pdf","svg"]),EXPORT_CONSTR:$(["chart","stockChart","mapChart","ganttChart"]),EXPORT_DEFAULT_HEIGHT:U(),EXPORT_DEFAULT_WIDTH:U(),EXPORT_DEFAULT_SCALE:U(),EXPORT_RASTERIZATION_TIMEOUT:D(),CUSTOM_LOGIC_ALLOW_CODE_EXECUTION:P(),CUSTOM_LOGIC_ALLOW_FILE_RESOURCES:P(),SERVER_ENABLE:P(),SERVER_HOST:H(),SERVER_PORT:U(),SERVER_BENCHMARKING:P(),SERVER_PROXY_HOST:H(),SERVER_PROXY_PORT:U(),SERVER_PROXY_TIMEOUT:D(),SERVER_RATE_LIMITING_ENABLE:P(),SERVER_RATE_LIMITING_MAX_REQUESTS:D(),SERVER_RATE_LIMITING_WINDOW:D(),SERVER_RATE_LIMITING_DELAY:D(),SERVER_RATE_LIMITING_TRUST_PROXY:P(),SERVER_RATE_LIMITING_SKIP_KEY:H(),SERVER_RATE_LIMITING_SKIP_TOKEN:H(),SERVER_SSL_ENABLE:P(),SERVER_SSL_FORCE:P(),SERVER_SSL_PORT:U(),SERVER_SSL_CERT_PATH:H(),POOL_MIN_WORKERS:D(),POOL_MAX_WORKERS:D(),POOL_WORK_LIMIT:U(),POOL_ACQUIRE_TIMEOUT:D(),POOL_CREATE_TIMEOUT:D(),POOL_DESTROY_TIMEOUT:D(),POOL_IDLE_TIMEOUT:D(),POOL_CREATE_RETRY_INTERVAL:D(),POOL_REAPER_INTERVAL:D(),POOL_BENCHMARKING:P(),LOGGING_LEVEL:h.string().trim().refine((e=>""===e||!isNaN(parseFloat(e))&&parseFloat(e)>=0&&parseFloat(e)<=5),(e=>({message:`Invalid value for LOGGING_LEVEL. We only accept values from 0 to 5 as logging levels, received '${e}'`}))).transform((e=>""!==e?parseFloat(e):void 0)),LOGGING_FILE:H(),LOGGING_DEST:H(),UI_ENABLE:P(),UI_ROUTE:H(),OTHER_NODE_ENV:$(["development","production","test"]),OTHER_LISTEN_TO_PROCESS_EXITS:P(),OTHER_NO_LOGO:P(),OTHER_HARD_RESET_PAGE:P(),OTHER_BROWSER_SHELL_MODE:P(),DEBUG_ENABLE:P(),DEBUG_HEADLESS:P(),DEBUG_DEVTOOLS:P(),DEBUG_LISTEN_TO_CONSOLE:P(),DEBUG_DUMPIO:P(),DEBUG_SLOW_MO:D(),DEBUG_DEBUGGING_PORT:U(),WEB_SOCKET_ENABLE:P(),WEB_SOCKET_RECONNECT:P(),WEB_SOCKET_REJECT_UNAUTHORIZED:P(),WEB_SOCKET_PING_TIMEOUT:D(),WEB_SOCKET_RECONNECT_INTERVAL:D(),WEB_SOCKET_RECONNECT_ATTEMPTS:D(),WEB_SOCKET_MESSAGE_INTERVAL:D(),WEB_SOCKET_URL:H(),WEB_SOCKET_SECRET:H()}).partial().parse(process.env),G=["red","yellow","blue","gray","green"];let j={toConsole:!0,toFile:!1,pathCreated:!1,levelsDesc:[{title:"error",color:G[0]},{title:"warning",color:G[1]},{title:"notice",color:G[2]},{title:"verbose",color:G[3]},{title:"benchmark",color:G[4]}],listeners:[]};for(const[e,t]of Object.entries(x.logging))j[e]=t.value;const M=(o,i)=>{j.toFile&&(j.pathCreated||(!e(j.dest)&&t(j.dest),j.pathCreated=!0),r(`${j.dest}${j.file}`,[i].concat(o).join(" ")+"\n",(e=>{e&&(console.log(`[logger] Unable to write to log file: ${e}`),j.toFile=!1)})))},F=(...e)=>{const[t,...r]=e,{level:o,levelsDesc:i}=j;if(5!==t&&(0===t||t>o||o>i.length))return;const n=`${(new Date).toString().split("(")[0].trim()} [${i[t-1].title}] -`;j.listeners.forEach((e=>{e(n,r.join(" "))})),j.toConsole&&console.log.apply(void 0,[n.toString()[j.levelsDesc[t-1].color]].concat(r)),M(r,n)},V=(e,t,r)=>{const o=r||t.message,{level:i,levelsDesc:n}=j;if(0===e||e>i||i>n.length)return;const s=`${(new Date).toString().split("(")[0].trim()} [${n[e-1].title}] -`,a=t.message!==t.stackMessage||void 0===t.stackMessage?t.stack:t.stack.split("\n").slice(1).join("\n"),c=[o,"\n",a];j.toConsole&&console.log.apply(void 0,[s.toString()[j.levelsDesc[e-1].color]].concat([o[G[e-1]],"\n",a])),j.listeners.forEach((e=>{e(s,c.join(" "))})),M(c,s)},q=e=>{e>=0&&e<=j.levelsDesc.length&&(j.level=e)},B=(e,t)=>{if(j={...j,dest:e||j.dest,file:t||j.file,toFile:!0},0===j.dest.length)return F(1,"[logger] File logging initialization: no path supplied.");j.dest.endsWith("/")||(j.dest+="/")},K=d(new URL("../.",import.meta.url)),X=(e,t)=>{const r=["png","jpeg","pdf","svg"];if(t){const o=t.split(".").pop();"jpg"===o?e="jpeg":r.includes(o)&&e!==o&&(e=o)}return{"image/png":"png","image/jpeg":"jpeg","application/pdf":"pdf","image/svg+xml":"svg"}[e]||r.find((t=>t===e))||"png"},z=(e=!1,t)=>{const r=["js","css","files"];let i=e,n=!1;if(t&&e.endsWith(".json"))try{i=J(o(e,"utf8"))}catch(e){return V(2,e,"[cli] No resources found.")}else i=J(e),i&&!t&&delete i.files;for(const e in i)r.includes(e)?n||(n=!0):delete i[e];return n?(i.files&&(i.files=i.files.map((e=>e.trim())),(!i.files||i.files.length<=0)&&delete i.files),i):F(3,"[cli] No resources found.")};function J(e,t){try{const r=JSON.parse("string"!=typeof e?JSON.stringify(e):e);return"string"!=typeof r&&t?JSON.stringify(r):r}catch{return!1}}const Y=e=>{if(null===e||"object"!=typeof e)return e;const t=Array.isArray(e)?[]:{};for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=Y(e[r]));return t},Z=(e,t)=>JSON.stringify(e,((e,r)=>("string"==typeof r&&((r=r.trim()).startsWith("function(")||r.startsWith("function ("))&&r.endsWith("}")&&(r=t?`EXP_FUN${(r+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:void 0),"function"==typeof r?`EXP_FUN${(r+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:r))).replaceAll(/"EXP_FUN|EXP_FUN"/g,"");function Q(){console.log("\nUsage of CLI arguments:".bold,"\n------",`\nFor more detailed information, visit the readme at: ${"https://github.com/highcharts/node-export-server#readme".bold.yellow}.`);const e=t=>{for(const[r,o]of Object.entries(t))if(Object.prototype.hasOwnProperty.call(o,"value")){let e=`  --${o.cliName||r} ${("<"+o.type+">").green} `;if(e.length<48)for(let t=e.length;t<48;t++)e+=".";console.log(e,o.description,`[Default: ${o.value.toString().bold}]`.blue)}else e(o)};Object.keys(x).forEach((t=>{["puppeteer","highcharts"].includes(t)||(console.log(`\n${t.toUpperCase()}`.red),e(x[t]))})),console.log("\n")}const ee=e=>!["false","undefined","null","NaN","0",""].includes(e)&&!!e,te=(e,t)=>{if(e&&"string"==typeof e)return(e=e.trim()).endsWith(".js")?!!t&&te(o(e,"utf8")):e.startsWith("function()")||e.startsWith("function ()")||e.startsWith("()=>")||e.startsWith("() =>")?`(${e})()`:e.replace(/;$/,"")},re=()=>{const e=process.hrtime.bigint();return()=>Number(process.hrtime.bigint()-e)/1e6};let oe={};const ie=()=>oe,ne=(e,t,r=[])=>{const o=Y(e);for(const[e,n]of Object.entries(t))o[e]="object"!=typeof(i=n)||Array.isArray(i)||null===i||r.includes(e)||void 0===o[e]?void 0!==n?n:o[e]:ne(o[e],n,r);var i;return o};function se(e,t={},r=""){Object.keys(e).forEach((o=>{const i=e[o],n=t&&t[o];void 0===i.value?se(i,n,`${r}.${o}`):(void 0!==n&&(i.value=n),i.envLink in W&&void 0!==W[i.envLink]&&(i.value=W[i.envLink]))}))}function ae(e){let t={};for(const[r,o]of Object.entries(e))t[r]=Object.prototype.hasOwnProperty.call(o,"value")?o.value:ae(o);return t}function ce(e,t,r){for(;t.length>1;){const o=t.shift();return Object.prototype.hasOwnProperty.call(e,o)||(e[o]={}),e[o]=ce(Object.assign({},e[o]),t,r),e}return e[t[0]]=r,e}async function le(e,t={}){return new Promise(((r,o)=>{const i=(e=>e.startsWith("https")?g:m)(e);i.get(e,t,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{t||o("Nothing was fetched from the URL."),e.text=t,r(e)}))})).on("error",(e=>{o(e)}))}))}class pe extends Error{constructor(e){super(),this.message=e,this.stackMessage=e}setError(e){return this.error=e,e.name&&(this.name=e.name),e.statusCode&&(this.statusCode=e.statusCode),e.stack&&(this.stackMessage=e.message,this.stack=e.stack),this}}const ue={cdnURL:"https://code.highcharts.com/",activeManifest:{},sources:"",hcVersion:""},he=e=>e.sources.substring(0,e.sources.indexOf("*/")).replace("/*","").replace("*/","").replace(/\n/g,"").trim(),de=async(e,t,r,o=!1)=>{e.endsWith(".js")&&(e=e.substring(0,e.length-3)),F(4,`[cache] Fetching script - ${e}.js`);const i=await le(`${e}.js`,t);if(200===i.statusCode&&"string"==typeof i.text){if(r){r[e.replace(/(.*)\/|(.*)modules\/|stock\/(.*)indicators\/|maps\/(.*)modules\//gi,"")]=1}return i.text}if(o)throw new pe(`Could not fetch the ${e}.js. The script might not exist in the requested version (status code: ${i.statusCode}).`).setError(i);return F(2,`[cache] Could not fetch the ${e}.js. The script might not exist in the requested version.`),""},me=async(e,t,r)=>{const o=e.version,i="latest"!==o&&o?`${o}/`:"",s=e.cdnURL||ue.cdnURL;F(3,`[cache] Updating cache version to Highcharts: ${i||"latest"}.`);const a={};try{return ue.sources=await(async(e,t,r,o,i)=>{let n;const s=o.host,a=o.port;if(s&&a)try{n=new l({host:s,port:a})}catch(e){throw new pe("[cache] Could not create a Proxy Agent.").setError(e)}const c=n?{agent:n,timeout:W.SERVER_PROXY_TIMEOUT}:{},p=[...e.map((e=>de(`${e}`,c,i,!0))),...t.map((e=>de(`${e}`,c,i))),...r.map((e=>de(`${e}`,c)))];return(await Promise.all(p)).join(";\n")})([...e.coreScripts.map((e=>`${s}${i}${e}`))],[...e.moduleScripts.map((e=>"map"===e?`${s}maps/${i}modules/${e}`:`${s}${i}modules/${e}`)),...e.indicatorScripts.map((e=>`${s}stock/${i}indicators/${e}`))],e.customScripts,t,a),ue.hcVersion=he(ue),n(r,ue.sources),a}catch(e){throw new pe("[cache] Unable to update the local Highcharts cache.").setError(e)}},ge=async r=>{const{highcharts:i,server:s}=r,c=a(K,i.cachePath);let l;const p=a(c,"manifest.json"),u=a(c,"sources.js");if(!e(c)&&t(c),!e(p)||i.forceFetch)F(3,"[cache] Fetching and caching Highcharts dependencies."),l=await me(i,s.proxy,u);else{let e=!1;const t=JSON.parse(o(p));if(t.modules&&Array.isArray(t.modules)){const e={};t.modules.forEach((t=>e[t]=1)),t.modules=e}const{coreScripts:r,moduleScripts:n,indicatorScripts:a}=i,c=r.length+n.length+a.length;t.version!==i.version?(F(2,"[cache] A Highcharts version mismatch in the cache, need to re-fetch."),e=!0):Object.keys(t.modules||{}).length!==c?(F(2,"[cache] The cache and the requested modules do not match, need to re-fetch."),e=!0):e=(n||[]).some((e=>{if(!t.modules[e])return F(2,`[cache] The ${e} is missing in the cache, need to re-fetch.`),!0})),e?l=await me(i,s.proxy,u):(F(3,"[cache] Dependency cache is up to date, proceeding."),ue.sources=o(u,"utf8"),l=t.modules,ue.hcVersion=he(ue))}await(async(e,t)=>{const r={version:e.version,modules:t||{}};ue.activeManifest=r,F(3,"[cache] Writing a new manifest.");try{n(a(K,e.cachePath,"manifest.json"),JSON.stringify(r),"utf8")}catch(e){throw new pe("[cache] Error writing the cache manifest.").setError(e)}})(i,l)},fe=()=>a(K,ie().highcharts.cachePath),ve=()=>ue.hcVersion;function be(){Highcharts.animObject=function(){return{duration:0}}}async function ye(e,t,r){window._displayErrors=r;const{getOptions:o,merge:i,setOptions:n,wrap:s}=Highcharts;Highcharts.setOptionsObj=i(!1,{},o()),t.customLogic.customCode&&new Function(t.customLogic.customCode)();const a={animation:!1};t.export.strInj&&(a.height=e.chart.height,a.width=e.chart.width),window.isRenderComplete=!1,s(Highcharts.Chart.prototype,"init",(function(e,t,r){((t=i(t,{exporting:{enabled:!1},plotOptions:{series:{label:{enabled:!1}}},tooltip:{}})).series||[]).forEach((function(e){e.animation=!1})),window.onHighchartsRender||(window.onHighchartsRender=Highcharts.addEvent(this,"render",(()=>{window.isRenderComplete=!0}))),e.apply(this,[t,r])})),s(Highcharts.Series.prototype,"init",(function(e,t,r){e.apply(this,[t,r])}));const c=t.export.strInj?new Function(`return ${t.export.strInj}`)():e,l=i(!1,JSON.parse(t.export.themeOptions),c,{chart:a}),p=t.customLogic.callback?new Function(`return ${t.customLogic.callback}`)():void 0,u=JSON.parse(t.export.globalOptions);u&&n(u),Highcharts[t.export.constr||"chart"]("container",l,p);const h=o();for(const e in h)"function"!=typeof h[e]&&delete h[e];n(Highcharts.setOptionsObj),Highcharts.setOptionsObj={}}const we=o(K+"/templates/template.html","utf8");let Ee;async function Te(){if(!Ee)return!1;const e=await Ee.newPage();return await e.setCacheEnabled(!1),await _e(e),function(e){const{debug:t}=ie();t.enable&&t.listenToConsole&&e.on("console",(e=>{console.log(`[debug] ${e.text()}`)}));e.on("pageerror",(async t=>{await e.$eval("#container",((e,t)=>{window._displayErrors&&(e.innerHTML=t)}),`<h1>Chart input data error: </h1>${t.toString()}`)}))}(e),e}async function Se(e,t){for(const e of t)await e.dispose();await e.evaluate((()=>{if("undefined"!=typeof Highcharts){const e=Highcharts.charts;if(Array.isArray(e)&&e.length)for(const t of e)t&&t.destroy(),Highcharts.charts.shift()}const[...e]=document.getElementsByTagName("script"),[,...t]=document.getElementsByTagName("style"),[...r]=document.getElementsByTagName("link");for(const o of[...e,...t,...r])o.remove()}))}async function _e(e){await e.setContent(we,{waitUntil:"domcontentloaded"}),await e.addScriptTag({path:`${fe()}/sources.js`}),await e.evaluate(be)}const Re=async(e,t,r,o)=>e.evaluate(ye,t,r,o);var ke=async(e,t,r)=>{let i=[];try{F(4,"[export] Determining export path.");const n=r.export,a=n?.options?.chart?.displayErrors&&ue.activeManifest.modules.debugger;let c;if(t.indexOf&&(t.indexOf("<svg")>=0||t.indexOf("<?xml")>=0)){if(F(4,"[export] Treating as SVG."),"svg"===n.type)return t;c=!0,await e.setContent((e=>`\n<!DOCTYPE html>\n<html lang='en-US'>\n  <head>\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\n    <title>Highcharts Export</title>\n  </head>\n  <style>\n    \n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#table-div, #sliders, #datatable, #controls, .ld-row {\n  display: none;\n  height: 0;\n}\n\n#chart-container {\n  box-sizing: border-box;\n  margin: 0;\n  overflow: auto;\n  font-size: 0;\n}\n\n#chart-container > figure, div {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n\n  </style>\n  <body>\n    <div id="chart-container">\n      ${e}\n    </div>\n  </body>\n</html>\n\n`)(t),{waitUntil:"domcontentloaded"})}else F(4,"[export] Treating as config."),n.strInj?await Re(e,{chart:{height:n.height,width:n.width}},r,a):(t.chart.height=n.height,t.chart.width=n.width,await Re(e,t,r,a));i=await async function(e,t){const r=[],i=t.customLogic.resources;if(i){const n=[];if(i.js&&n.push({content:i.js}),i.files)for(const e of i.files){const t=!e.startsWith("http");n.push(t?{content:o(e,"utf8")}:{url:e})}for(const t of n)try{r.push(await e.addScriptTag(t))}catch(e){V(2,e,"[export] The JS resource cannot be loaded.")}n.length=0;const a=[];if(i.css){let o=i.css.match(/@import\s*([^;]*);/g);if(o)for(let e of o)e&&(e=e.replace("url(","").replace("@import","").replace(/"/g,"").replace(/'/g,"").replace(/;/,"").replace(/\)/g,"").trim(),e.startsWith("http")?a.push({url:e}):t.customLogic.allowFileResources&&a.push({path:s.join(K,e)}));a.push({content:i.css.replace(/@import\s*([^;]*);/g,"")||" "});for(const t of a)try{r.push(await e.addStyleTag(t))}catch(e){V(2,e,"[export] The CSS resource cannot be loaded.")}a.length=0}}return r}(e,r);const l=c?await e.evaluate((e=>{const t=document.querySelector("#chart-container svg:first-of-type"),r=t.height.baseVal.value*e,o=t.width.baseVal.value*e;return document.body.style.zoom=e,document.body.style.margin="0px",{chartHeight:r,chartWidth:o}}),parseFloat(n.scale)):await e.evaluate((()=>{const{chartHeight:e,chartWidth:t}=window.Highcharts.charts[0];return document.body.style.zoom=1,{chartHeight:e,chartWidth:t}})),p=Math.ceil(l.chartHeight||n.height),u=Math.ceil(l.chartWidth||n.width),{x:h,y:d}=await(e=>e.$eval("#chart-container",(e=>{const{x:t,y:r,width:o,height:i}=e.getBoundingClientRect();return{x:t,y:r,width:o,height:Math.trunc(i>1?i:500)}})))(e);let m;if(await e.setViewport({height:p,width:u,deviceScaleFactor:c?1:parseFloat(n.scale)}),"svg"===n.type)m=await(e=>e.$eval("#container svg:first-of-type",(e=>e.outerHTML)))(e);else if(["png","jpeg"].includes(n.type))m=await((e,t,r,o,i)=>Promise.race([e.screenshot({type:t,encoding:r,clip:o,captureBeyondViewport:!0,fullPage:!1,optimizeForSpeed:!0,..."png"!==t?{quality:80}:{},omitBackground:"png"==t}),new Promise(((e,t)=>setTimeout((()=>t(new pe("Rasterization timeout"))),i||1500)))]))(e,n.type,"base64",{width:u,height:p,x:h,y:d},n.rasterizationTimeout);else{if("pdf"!==n.type)throw new pe(`[export] Unsupported output format ${n.type}.`);m=await(async(e,t,r,o,i)=>(await e.emulateMediaType("screen"),Promise.race([e.pdf({height:t+1,width:r,encoding:o}),new Promise(((e,t)=>setTimeout((()=>t(new pe("Rasterization timeout"))),i||1500)))])))(e,p,u,"base64",n.rasterizationTimeout)}return await Se(e,i),m}catch(t){return await Se(e,i),t}};let Oe=!1;const xe={performedExports:0,exportAttempts:0,exportFromSvgAttempts:0,timeSpent:0,droppedExports:0,spentAverage:0};let Le={};const Ie={create:async()=>{let e=!1;const t=v(),r=(new Date).getTime();try{if(e=await Te(),!e||e.isClosed())throw new pe("The page is invalid or closed.");F(3,`[pool] Successfully created a worker ${t} - took ${(new Date).getTime()-r} ms.`)}catch(e){throw new pe("Error encountered when creating a new page.").setError(e)}return{id:t,page:e,workCount:Math.round(Math.random()*(Le.workLimit/2))}},validate:async e=>!(Le.workLimit&&++e.workCount>Le.workLimit)||(F(3,`[pool] Worker failed validation: exceeded work limit (limit is ${Le.workLimit}).`),!1),destroy:async e=>{F(3,`[pool] Destroying pool entry ${e.id}.`),e.page&&await e.page.close()}},Ce=async e=>{if(Le=e&&e.pool?{...e.pool}:{},await async function(e){const{debug:t,other:r}=ie(),{enable:o,...i}=t,n={headless:!r.browserShellMode||"shell",userDataDir:"./tmp/",args:e,handleSIGINT:!1,handleSIGTERM:!1,handleSIGHUP:!1,waitForInitialPage:!1,defaultViewport:null,...o&&i};if(!Ee){let e=0;const t=async()=>{try{F(3,`[browser] Attempting to get a browser instance (try ${++e}).`),Ee=await b.launch(n)}catch(r){if(V(1,r,"[browser] Failed to launch a browser instance."),!(e<25))throw r;F(3,`[browser] Retry to open a browser (${e} out of 25).`),await new Promise((e=>setTimeout(e,4e3))),await t()}};try{await t(),"shell"===n.headless&&F(3,"[browser] Launched browser in shell mode."),o&&F(3,"[browser] Launched browser in debug mode.")}catch(e){throw new pe("[browser] Maximum retries to open a browser instance reached.").setError(e)}if(!Ee)throw new pe("[browser] Cannot find a browser to open.")}return Ee}(e.puppeteerArgs),F(3,`[pool] Initializing pool with workers: min ${Le.minWorkers}, max ${Le.maxWorkers}.`),Oe)return F(4,"[pool] Already initialized, please kill it before creating a new one.");parseInt(Le.minWorkers)>parseInt(Le.maxWorkers)&&(Le.minWorkers=Le.maxWorkers);try{Oe=new f({...Ie,min:parseInt(Le.minWorkers),max:parseInt(Le.maxWorkers),acquireTimeoutMillis:Le.acquireTimeout,createTimeoutMillis:Le.createTimeout,destroyTimeoutMillis:Le.destroyTimeout,idleTimeoutMillis:Le.idleTimeout,createRetryIntervalMillis:Le.createRetryInterval,reapIntervalMillis:Le.reaperInterval,propagateCreateError:!1}),Oe.on("release",(async e=>{await async function(e,t=!1){try{e.isClosed()||(t?(await e.goto("about:blank",{waitUntil:"domcontentloaded"}),await _e(e)):await e.evaluate((()=>{document.body.innerHTML='<div id="chart-container"><div id="container"></div></div>'})))}catch(e){V(2,e,"[browser] Could not clear the content of the page.")}}(e.page,!1),F(4,`[pool] Releasing a worker with ID ${e.id}.`)})),Oe.on("destroySuccess",((e,t)=>{F(4,`[pool] Destroyed a worker with ID ${t.id}.`)}));const e=[];for(let t=0;t<Le.minWorkers;t++)try{const t=await Oe.acquire().promise;e.push(t)}catch(e){V(2,e,"[pool] Could not create an initial resource.")}e.forEach((e=>{Oe.release(e)})),F(3,"[pool] The pool is ready"+(e.length?` with ${e.length} initial resources waiting.`:"."))}catch(e){throw new pe("[pool] Could not create the pool of workers.").setError(e)}};async function Ne(){if(F(3,"[pool] Killing pool with all workers and closing browser."),Oe){for(const e of Oe.used)Oe.release(e.resource);Oe.destroyed||(await Oe.destroy(),F(4,"[browser] Destroyed the pool of resources."))}await async function(){Ee?.connected&&await Ee.close(),F(4,"[browser] Closed the browser.")}()}const Ae=async(e,t)=>{let r;try{if(F(4,"[pool] Work received, starting to process."),++xe.exportAttempts,Le.benchmarking&&function(){const{min:e,max:t,all:r,available:o,used:i,pending:n}=Pe();F(5,`[pool] The minimum number of resources allowed by pool: ${e}.`),F(5,`[pool] The maximum number of resources allowed by pool: ${t}.`),F(5,`[pool] The number of all created resources: ${r}.`),F(5,`[pool] The number of available resources: ${o}.`),F(5,`[pool] The number of acquired resources: ${i}.`),F(5,`[pool] The number of resources waiting to be acquired: ${n}.`)}(),!Oe)throw new pe("Work received, but pool has not been started.");const o=re();try{F(4,"[pool] Acquiring a worker handle."),r=await Oe.acquire().promise,t.server.benchmarking&&F(5,t.payload?.requestId?`[benchmark] Request with ID ${t.payload?.requestId} -`:"[benchmark]",`Acquired a worker handle: ${o()}ms.`)}catch(e){throw new pe((t.payload?.requestId?`For request with ID ${t.payload?.requestId} - `:"")+`Error encountered when acquiring an available entry: ${o()}ms.`).setError(e)}if(F(4,"[pool] Acquired a worker handle."),!r.page)throw new pe("Resolved worker page is invalid: the pool setup is wonky.");let i=(new Date).getTime();F(4,`[pool] Starting work on pool entry with ID ${r.id}.`);const n=re(),s=await ke(r.page,e,t);if(s instanceof Error)throw"Rasterization timeout"===s.message&&(r.page.close(),r.page=await Te()),new pe((t.payload?.requestId?`For request with ID ${t.payload?.requestId} - `:"")+`Error encountered during export: ${n()}ms.`).setError(s);t.server.benchmarking&&F(5,t.payload?.requestId?`[benchmark] Request with ID ${t.payload?.requestId} -`:"[benchmark]",`Exported a chart sucessfully: ${n()}ms.`),Oe.release(r);const a=(new Date).getTime()-i;return xe.timeSpent+=a,xe.spentAverage=xe.timeSpent/++xe.performedExports,F(4,`[pool] Work completed in ${a} ms.`),{result:s,options:t}}catch(e){throw++xe.droppedExports,r&&Oe.release(r),new pe(`[pool] In pool.postWork: ${e.message}`).setError(e)}},Pe=()=>({min:Oe.min,max:Oe.max,all:Oe.numFree()+Oe.numUsed(),available:Oe.numFree(),used:Oe.numUsed(),pending:Oe.numPendingAcquires()});function $e(){return xe}let He=!1;const Ue=async(e,t)=>{F(4,"[chart] Starting the exporting process.");const r=((e,t={})=>{let r={};return e.svg?(r=Y(t),r.export.type=e.type||e.export.type,r.export.scale=e.scale||e.export.scale,r.export.outfile=e.outfile||e.export.outfile,r.payload={svg:e.svg}):r=ne(t,e,I),r.export.outfile=r.export?.outfile||`chart.${r.export?.type||"png"}`,r})(e,ie()),i=r.export;if(r.payload?.svg&&""!==r.payload.svg)try{F(4,"[chart] Attempting to export from a SVG input.");const e=je(function(e){const t=new y("").window;return w(t).sanitize(e,{ADD_TAGS:["foreignObject"]})}(r.payload.svg),r,t);return++xe.exportFromSvgAttempts,e}catch(e){return t(new pe("[chart] Error loading SVG input.").setError(e))}if(i.infile&&i.infile.length)try{return F(4,"[chart] Attempting to export from an input file."),r.export.instr=o(i.infile,"utf8"),je(r.export.instr.trim(),r,t)}catch(e){return t(new pe("[chart] Error loading input file.").setError(e))}if(i.instr&&""!==i.instr||i.options&&""!==i.options)try{return F(4,"[chart] Attempting to export from a raw input."),ee(r.customLogic?.allowCodeExecution)?Ge(r,t):"string"==typeof i.instr?je(i.instr.trim(),r,t):We(r,i.instr||i.options,t)}catch(e){return t(new pe("[chart] Error loading raw input.").setError(e))}return t(new pe("[chart] No valid input specified. Check if at least one of the following parameters is correctly set: 'infile', 'instr', 'options', or 'svg'."))},De=e=>{const{chart:t,exporting:r}=e.export?.options||J(e.export?.instr),o=J(e.export?.globalOptions);let i=e.export?.scale||r?.scale||o?.exporting?.scale||e.export?.defaultScale||1;i=Math.max(.1,Math.min(i,5)),i=((e,t=1)=>{const r=Math.pow(10,t||0);return Math.round(+e*r)/r})(i,2);const n={height:e.export?.height||r?.sourceHeight||t?.height||o?.exporting?.sourceHeight||o?.chart?.height||e.export?.defaultHeight||400,width:e.export?.width||r?.sourceWidth||t?.width||o?.exporting?.sourceWidth||o?.chart?.width||e.export?.defaultWidth||600,scale:i};for(let[e,t]of Object.entries(n))n[e]="string"==typeof t?+t.replace(/px|%/gi,""):t;return n},We=async(e,t,r,i)=>{let{export:n,customLogic:s}=e;const a="boolean"==typeof s.allowCodeExecution?s.allowCodeExecution:He;if(s){if(a)if("string"==typeof e.customLogic.resources)e.customLogic.resources=z(e.customLogic.resources,ee(e.customLogic.allowFileResources));else if(!e.customLogic.resources)try{const t=o("resources.json","utf8");e.customLogic.resources=z(t,ee(e.customLogic.allowFileResources))}catch(e){V(2,e,"[chart] Unable to load the default resources.json file.")}}else s=e.customLogic={};if(!a&&s){if(s.callback||s.resources||s.customCode)return r(new pe("[chart] The 'callback', 'resources' and 'customCode' options have been disabled for this server."));s.callback=!1,s.resources=!1,s.customCode=!1}if(t&&(t.chart=t.chart||{},t.exporting=t.exporting||{},t.exporting.enabled=!1),n.constr=n.constr||"chart",n.type=X(n.type,n.outfile),"svg"===n.type&&(n.width=!1),["globalOptions","themeOptions"].forEach((e=>{try{n&&n[e]&&("string"==typeof n[e]&&n[e].endsWith(".json")?n[e]=J(o(n[e],"utf8"),!0):n[e]=J(n[e],!0))}catch(t){n[e]={},V(2,t,`[chart] The '${e}' cannot be loaded.`)}})),s.allowCodeExecution)try{s.customCode=te(s.customCode,s.allowFileResources)}catch(e){V(2,e,"[chart] The 'customCode' cannot be loaded.")}if(s&&s.callback&&s.callback?.indexOf("{")<0)if(s.allowFileResources)try{s.callback=o(s.callback,"utf8")}catch(e){s.callback=!1,V(2,e,"[chart] The 'callback' cannot be loaded.")}else s.callback=!1;e.export={...e.export,...De(e)};try{return r(!1,await Ae(n.strInj||t||i,e))}catch(e){return r(e)}},Ge=(e,t)=>{try{let r,o=e.export.instr||e.export.options;return"string"!=typeof o&&(r=o=Z(o,e.customLogic?.allowCodeExecution)),r=o.replaceAll(/\t|\n|\r/g,"").trim(),";"===r[r.length-1]&&(r=r.substring(0,r.length-1)),e.export.strInj=r,We(e,!1,t)}catch(r){return t(new pe(`[chart] Malformed input detected for ${e.export?.requestId||"?"}. Please make sure that your JSON/JavaScript options are sent using the "options" attribute, and that if you're using SVG, it is unescaped.`).setError(r))}},je=(e,t,r)=>{const{allowCodeExecution:o}=t.customLogic;if(e.indexOf("<svg")>=0||e.indexOf("<?xml")>=0)return F(4,"[chart] Parsing input as SVG."),We(t,!1,r,e);try{const o=JSON.parse(e.replaceAll(/\t|\n|\r/g," "));return We(t,o,r)}catch(e){return ee(o)?Ge(t,r):r(new pe("[chart] Only JSON configurations and SVG are allowed for this server. If this is your server, JavaScript custom code can be enabled by starting the server with the --allowCodeExecution flag.").setError(e))}},Me=[],Fe=e=>{Me.push(e)},Ve=()=>{F(4,"[server] Clearing all registered intervals and timeouts.");for(const e of Me)clearInterval(e),clearTimeout(e)},qe=(e,t,r,o)=>{V(1,e),"development"!==W.OTHER_NODE_ENV&&delete e.stack,o(e)},Be=(e,t,r,o)=>{const{statusCode:i,status:n,message:s,stack:a}=e,c=i||n||500;r.status(c).json({statusCode:c,message:s,stack:a})};var Ke=(e,t)=>{const r="Too many requests, you have been rate limited. Please try again later.",o={max:t.maxRequests||30,window:t.window||1,delay:t.delay||0,trustProxy:t.trustProxy||!1,skipKey:t.skipKey||!1,skipToken:t.skipToken||!1};o.trustProxy&&e.enable("trust proxy");const i=_({windowMs:60*o.window*1e3,max:o.max,delayMs:o.delay,handler:(e,t)=>{t.format({json:()=>{t.status(429).send({message:r})},default:()=>{t.status(429).send(r)}})},skip:e=>!1!==o.skipKey&&!1!==o.skipToken&&e.query.key===o.skipKey&&e.query.access_token===o.skipToken&&(F(4,"[rate limiting] Skipping rate limiter."),!0)});e.use(i),F(3,`[rate limiting] Enabled rate limiting with ${o.max} requests per ${o.window} minute for each IP, trusting proxy: ${o.trustProxy}.`)};const Xe=JSON.parse(o(a(K,"lib","schemas","telemetry.json"))),ze={numberOfRequests:0},Je=["series","xAxis","yAxis","zAxis"];function Ye(e,t){const r={};for(const[o,i]of Object.entries(e))if(void 0!==t[o])if(null!==i)if(Array.isArray(t[o]))if(Je.includes(o)){r[o]=[];for(const[e,n]of t[o].entries())r[o][e]=Ye(i,n)}else r[o]=Ye(i,t[o][0]);else r[o]=Ye(i,t[o]);else r[o]=t[o];return r}function Ze(e,t){ze[t]=Ye(Xe,e),ze.numberOfRequests++}const Qe=new Map;let et,tt=null;function rt(e){if(et=ie().webSocket,!0===et.enable){const t={rejectUnauthorized:et.rejectUnauthorized,headers:{auth:R.sign({success:"success"},et.secret,{algorithm:"HS256",expiresIn:"5m"}),"X-Server-Address":`${e.protocol}://${["::","0.0.0.0"].includes(e.address)?"localhost":e.address}:${e.port}`}},r={id:v(),reconnect:et.reconnect,reconnectTry:0,reconnectInterval:null,pingTimeout:null};ot(et.url,t,r),function(e){tt=setInterval((()=>{try{const t=(e?Qe.get(e):Qe.values()).next().value;t&&t.readyState===k.OPEN&&Object.keys(ze).length>1&&ze.numberOfRequests>0&&t.send(JSON.stringify(ze))}catch(e){V(1,"[websocket] Could not send data through WebSocket.")}var e}),e.messageInterval),Fe(tt)}(et)}}function ot(e,t,r){let o=new k(e,t);o.on("open",(()=>{clearInterval(r.reconnectInterval),Qe.set(r.id,o),F(3,`[websocket] WebSocket: ${r.id} - Connected to server: ${e}.`)})),o.on("close",(i=>{F(3,"[websocket]",`WebSocket: ${r.id} - Disconnected from server: ${e} with code: ${i}.`),clearTimeout(r.pingTimeout),Qe.delete(r.id),o=null,r.reconnect&&!r.reconnectInterval&&it(e,t,r)})),o.on("error",(e=>{V(1,e,`[websocket] WebSocket: ${r.id} - Error occured.`),e.message.includes("403")?(r.reconnect=!1,r.reconnectTry=et.reconnectAttempts):r.reconnect=et.reconnect})),o.on("message",(e=>{F(3,`[websocket] WebSocket: ${r.id} - Data received: ${e}`)})),o.on("ping",(()=>{F(3,`[websocket] WebSocket: ${r.id} - Received PING from server: ${e}.`),clearTimeout(r.pingTimeout),r.pingTimeout=setTimeout((()=>{o.terminate(),r.reconnect&&it(e,t,r)}),et.pingTimeout)}))}function it(e,t,r){r.reconnectInterval=setInterval((()=>{r.reconnectTry<et.reconnectAttempts?(F(3,`[websocket] WebSocket: ${r.id} - Attempt ${++r.reconnectTry} of ${et.reconnectAttempts} to reconnect to server: ${e}.`),ot(e,t,r)):(r.reconnect=!1,clearInterval(r.reconnectInterval),F(2,`[websocket] WebSocket: ${r.id} - Could not reconnect to server: ${e}.`))}),et.reconnectInterval),Fe(r.reconnectInterval)}function nt(){for(const e of Qe.values())e.terminate();Qe.clear()}class st extends pe{constructor(e,t){super(e),this.status=this.statusCode=t}setStatus(e){return this.status=e,this}}var at=e=>!!e&&e.post("/version/change/:newVersion",(async(e,t,r)=>{try{const r=W.HIGHCHARTS_ADMIN_TOKEN;if(!r||!r.length)throw new st("The server is not configured to perform run-time version changes: HIGHCHARTS_ADMIN_TOKEN is not set.",401);const o=e.get("hc-auth");if(!o||o!==r)throw new st("Invalid or missing token: Set the token in the hc-auth header.",401);const i=e.params.newVersion;if(!i)throw new st("No new version supplied.",400);try{await(async e=>{const t=ie();t?.highcharts&&(t.highcharts.version=e),await ge(t)})(i)}catch(e){throw new st(`Version change: ${e.message}`,e.statusCode).setError(e)}t.status(200).send({statusCode:200,version:ve(),message:`Successfully updated Highcharts to version: ${i}.`})}catch(e){r(e)}}));const ct={png:"image/png",jpeg:"image/jpeg",gif:"image/gif",pdf:"application/pdf",svg:"image/svg+xml"};let lt=0;const pt=[],ut=[],ht=(e,t,r,o)=>{let i=!0;const{id:n,uniqueId:s,type:a,body:c}=o;return e.some((e=>{if(e){let o=e(t,r,n,s,a,c);return void 0!==o&&!0!==o&&(i=o),!0}})),i},dt=async(e,t,r)=>{try{const r=re(),i=v().replace(/-/g,""),n=ie(),s=e.body,a=++lt;let c=X(s.type);if(!s||"object"==typeof(o=s)&&!Array.isArray(o)&&null!==o&&0===Object.keys(o).length)throw new st("The request body is required. Please ensure that your Content-Type header is correct (accepted types are application/json and multipart/form-data).",400);let l=J(s.infile||s.options||s.data);if(!l&&!s.svg)throw F(2,`The request with ID ${i} from ${e.headers["x-forwarded-for"]||e.connection.remoteAddress} was incorrect. Payload received: ${JSON.stringify(s)}.`),new st("No correct chart data found. Ensure that you are using either application/json or multipart/form-data headers. If sending JSON, make sure the chart data is in the 'infile', 'options', or 'data' attribute. If sending SVG, ensure it is in the 'svg' attribute.",400);let p=!1;if(p=ht(pt,e,t,{id:a,uniqueId:i,type:c,body:s}),!0!==p)return t.send(p);let u=!1;e.socket.on("close",(()=>{u=!0})),F(4,`[export] Got an incoming HTTP request with ID ${i}.`),s.constr="string"==typeof s.constr&&s.constr||"chart";const h={export:{instr:l,type:c,constr:s.constr[0].toLowerCase()+s.constr.substr(1),height:s.height,width:s.width,scale:s.scale||n.export.scale,globalOptions:J(s.globalOptions,!0),themeOptions:J(s.themeOptions,!0)},customLogic:{allowCodeExecution:He,allowFileResources:!1,resources:J(s.resources,!0),callback:s.callback,customCode:s.customCode}};l&&(h.export.instr=Z(l,h.customLogic.allowCodeExecution));const d=ne(n,h);if(d.export.options=l,d.payload={svg:s.svg||!1,b64:s.b64||!1,noDownload:s.noDownload||!1,requestId:i},s.svg&&(e=>[/xlink:href="(?:http:\/\/|https:\/\/)?localhost\b/,/xlink:href="(?:http:\/\/|https:\/\/)?10\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?127\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?172\.(1[6-9]|2[0-9]|3[0-1])\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?192\.168\.\d{1,3}\.\d{1,3}\b/].some((t=>t.test(e))))(d.payload.svg))throw new st("SVG potentially contain at least one forbidden URL in xlink:href element. Please review the SVG content and ensure that all referenced URLs comply with security policies.",400);await Ue(d,((o,l)=>{if(e.socket.removeAllListeners("close"),n.server.benchmarking&&F(5,`[benchmark] Request with ID ${i} - After the whole exporting process: ${r()}ms.`),u)return F(3,"[export] The client closed the connection before the chart finished processing.");if(o)throw o;if(!l||!l.result)throw new st(`Unexpected return from chart generation. Please check your request data. For the request with ID ${i}, the result is ${l.result}.`,400);return c=l.options.export.type,ht(ut,e,t,{id:a,body:l.result}),Ze(d.export.options,d.payload.requestId),l.result?s.b64?"pdf"===c||"svg"==c?t.send(Buffer.from(l.result,"utf8").toString("base64")):t.send(l.result):(t.header("Content-Type",ct[c]||"image/png"),s.noDownload||t.attachment(`${e.params.filename||e.body.filename||"chart"}.${c||"png"}`),"svg"===c?t.send(l.result):t.send(Buffer.from(l.result,"base64"))):void 0}))}catch(e){r(e)}var o};const mt=JSON.parse(o(a(K,"package.json"))),gt=new Date,ft=[];function vt(e){if(!e)return!1;Fe(setInterval((()=>{const e=$e(),t=0===e.exportAttempts?1:e.performedExports/e.exportAttempts*100;ft.push(t),ft.length>30&&ft.shift()}),6e4)),e.get("/health",((e,t)=>{const r=$e(),o=ft.length,i=ft.reduce(((e,t)=>e+t),0)/ft.length;F(4,"[health.js] GET /health [200] - returning server health."),t.send({status:"OK",bootTime:gt,uptime:Math.floor(((new Date).getTime()-gt.getTime())/1e3/60)+" minutes",version:mt.version,highchartsVersion:ve(),averageProcessingTime:r.spentAverage,performedExports:r.performedExports,failedExports:r.droppedExports,exportAttempts:r.exportAttempts,sucessRatio:r.performedExports/r.exportAttempts*100,pool:Pe(),period:o,movingAverage:i,message:`Last ${o} minutes had a success rate of ${i.toFixed(2)}%.`,svgExportAttempts:r.exportFromSvgAttempts,jsonExportAttempts:r.performedExports-r.exportFromSvgAttempts})}))}const bt=new Map,yt=T();yt.disable("x-powered-by"),yt.use(E());const wt=S.memoryStorage(),Et=S({storage:wt,limits:{fieldSize:52428800}});yt.use(T.json({limit:52428800})),yt.use(T.urlencoded({extended:!0,limit:52428800})),yt.use(Et.none());const Tt=e=>{e.on("clientError",(e=>{V(1,e,`[server] Client error: ${e.message}`)})),e.on("error",(e=>{V(1,e,`[server] Server error: ${e.message}`)})),e.on("connection",(e=>{e.on("error",(e=>{V(1,e,`[server] Socket error: ${e.message}`)}))}))},St=async e=>{try{if(!e.enable)return!1;if(!e.ssl.force){const t=m.createServer(yt);Tt(t),t.listen(e.port,e.host,(()=>{bt.set(e.port,t),F(3,`[server] Started HTTP server on ${e.host}:${e.port}.`),1===bt.size&&rt({...t.address(),protocol:"http"})}))}if(e.ssl.enable){let t,r;try{t=await i.readFile(c.join(e.ssl.certPath,"server.key"),"utf8"),r=await i.readFile(c.join(e.ssl.certPath,"server.crt"),"utf8")}catch(t){F(2,`[server] Unable to load key/certificate from the '${e.ssl.certPath}' path. Could not run secured layer server.`)}if(t&&r){const o=g.createServer({key:t,cert:r},yt);Tt(o),o.listen(e.ssl.port,e.host,(()=>{bt.set(e.ssl.port,o),F(3,`[server] Started HTTPS server on ${e.host}:${e.ssl.port}.`),1===bt.size&&rt({...o.address(),protocol:"https"})}))}}e.rateLimiting&&e.rateLimiting.enable&&![0,NaN].includes(e.rateLimiting.maxRequests)&&Ke(yt,e.rateLimiting),yt.use(T.static(c.join(K,"public"))),vt(yt),(e=>{e.post("/",dt),e.post("/:filename",dt)})(yt),(e=>{!!e&&e.get("/",((e,t)=>{t.sendFile(a(K,"public","index.html"))}))})(yt),at(yt),(e=>{e.use(qe),e.use(Be)})(yt)}catch(e){throw new pe("[server] Could not configure and start the server.").setError(e)}},_t=()=>{F(4,"[server] Closing all servers.");for(const[e,t]of bt)t.close((()=>{bt.delete(e),F(4,`[server] Closed server on port: ${e}.`)}))};var Rt={startServer:St,closeServers:_t,getServers:()=>bt,enableRateLimiting:e=>Ke(yt,e),getExpress:()=>T,getApp:()=>yt,use:(e,...t)=>{yt.use(e,...t)},get:(e,...t)=>{yt.get(e,...t)},post:(e,...t)=>{yt.post(e,...t)}};const kt=async e=>{await Promise.allSettled([Ve(),nt(),_t(),Ne()]),process.exit(e)};var Ot={server:Rt,startServer:St,initExport:async e=>{var t;return t=e.customLogic&&e.customLogic.allowCodeExecution,He=ee(t),(e=>{q(e&&parseInt(e.level)),e&&e.dest&&B(e.dest,e.file||"highcharts-export-server.log")})(e.logging),e.other.listenToProcessExits&&(F(3,"[process] Attaching exit listeners to the process."),process.on("exit",(e=>{F(4,`Process exited with code ${e}.`)})),process.on("SIGINT",(async(e,t)=>{F(4,`The ${e} event with code: ${t}.`),await kt(0)})),process.on("SIGTERM",(async(e,t)=>{F(4,`The ${e} event with code: ${t}.`),await kt(0)})),process.on("SIGHUP",(async(e,t)=>{F(4,`The ${e} event with code: ${t}.`),await kt(0)})),process.on("uncaughtException",(async(e,t)=>{V(1,e,`The ${t} error.`),await kt(1)}))),await ge(e),await Ce({pool:e.pool||{minWorkers:1,maxWorkers:1},puppeteerArgs:e.puppeteer.args||[]}),e},singleExport:async e=>{e.export.instr=e.export.instr||e.export.options,await Ue(e,(async(e,t)=>{if(e)throw e;const{outfile:r,type:o}=t.options.export;n(r||`chart.${o}`,"svg"!==o?Buffer.from(t.result,"base64"):t.result),await Ne()}))},batchExport:async e=>{const t=[];for(let r of e.export.batch.split(";"))r=r.split("="),2===r.length&&t.push(Ue({...e,export:{...e.export,infile:r[0],outfile:r[1]}},((e,t)=>{if(e)throw e;n(t.options.export.outfile,"svg"!==t.options.export.type?Buffer.from(t.result,"base64"):t.result)})));try{await Promise.all(t),await Ne()}catch(e){throw new pe("[chart] Error encountered during batch export.").setError(e)}},startExport:Ue,initPool:Ce,killPool:Ne,setOptions:(e,t)=>(t?.length&&(oe=function(e){const t=e.findIndex((e=>"loadConfig"===e.replace(/-/g,"")));if(t>-1&&e[t+1]){const r=e[t+1];try{if(r&&r.endsWith(".json"))return JSON.parse(o(r))}catch(e){V(2,e,`[config] Unable to load the configuration from the ${r} file.`)}}return{}}(t)),se(x,oe),oe=ae(x),e&&(oe=ne(oe,e,I)),t?.length&&(oe=function(e,t,r){let o=!1;for(let i=0;i<t.length;i++){const n=t[i].replace(/-/g,""),s=C[n]?C[n].split("."):[];let a;s.reduce(((e,t,r)=>(s.length-1===r&&(a=e[t].type),e[t])),r),s.reduce(((e,r,c)=>(s.length-1===c&&void 0!==e[r]&&(t[++i]?"boolean"===a?e[r]=ee(t[i]):"number"===a?e[r]=+t[i]:a.indexOf("]")>=0?e[r]=t[i].split(","):e[r]=t[i]:(F(2,`[config] Missing value for the '${n}' argument. Using the default value.`),o=!0)),e[r])),e)}o&&Q();return e}(oe,t,x)),oe),shutdownCleanUp:kt,log:F,logWithStack:V,setLogLevel:q,enableFileLogging:B,mapToNewConfig:e=>{const t={};for(const[r,o]of Object.entries(e)){const e=C[r]?C[r].split("."):[];e.reduce(((t,r,i)=>t[r]=e.length-1===i?o:t[r]||{}),t)}return t},manualConfig:async t=>{let r={};e(t)&&(r=JSON.parse(o(t,"utf8")));const n=Object.keys(L).map((e=>({title:`${e} options`,value:e})));return p({type:"multiselect",name:"category",message:"Which category do you want to configure?",hint:"Space: Select specific, A: Select all, Enter: Confirm.",instructions:"",choices:n},{onSubmit:async(e,o)=>{let n=0,s=[];for(const e of o)L[e]=L[e].map((t=>({...t,section:e}))),s=[...s,...L[e]];return await p(s,{onSubmit:async(e,o)=>{if("moduleScripts"===e.name?(o=o.length?o.map((t=>e.choices[t])):e.choices,r[e.section][e.name]=o):r[e.section]=ce(Object.assign({},r[e.section]||{}),e.name.split("."),e.choices?e.choices[o]:o),++n===s.length){try{await i.writeFile(t,JSON.stringify(r,null,2),"utf8")}catch(e){V(1,e,`[config] An error occurred while creating the ${t} file.`)}return!0}}}),!0}})},printLogo:e=>{const t=JSON.parse(o(a(K,"package.json"))).version;e?console.log(`Starting Highcharts Export Server v${t}...`):console.log(o(K+"/msg/startup.msg").toString().bold.yellow,`v${t}\n`.bold)},printUsage:Q};export{Ot as default};
//# sourceMappingURL=index.esm.js.map
